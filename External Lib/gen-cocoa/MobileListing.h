/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"

#import "MobileCommon.h"

enum ListingStatus {
  ListingStatus_Correct = 1,
  ListingStatus_Incorrect = 2,
  ListingStatus_Missing = 3,
  ListingStatus_Duplicate = 4,
  ListingStatus_Invalid = 5
};

enum AttributeStatus {
  AttributeStatus_Correct = 1,
  AttributeStatus_Incorrect = 2,
  AttributeStatus_Missing = 3,
  AttributeStatus_NotApplicable = 4,
  AttributeStatus_Insufficient = 5,
  AttributeStatus_Unknown = 6
};

enum ClaimedState {
  ClaimedState_Claimed = 1,
  ClaimedState_NotClaimed = 2,
  ClaimedState_Unknown = 3
};

enum CredentialStatus {
  CredentialStatus_Valid = 1,
  CredentialStatus_InValid = 2
};

enum SourceListingState {
  SourceListingState_MissingURL = 1,
  SourceListingState_PendingSiteCreation = 3,
  SourceListingState_MissingCredentials = 4,
  SourceListingState_CredentialsRequested = 5,
  SourceListingState_CredentialsDenied = 6,
  SourceListingState_InvalidListingData = 7,
  SourceListingState_CorrectionPending = 8,
  SourceListingState_Unclaimed = 9,
  SourceListingState_ClaimPending = 10,
  SourceListingState_Duplicated = 11,
  SourceListingState_MergePending = 12,
  SourceListingState_ListingComplete = 14,
  SourceListingState_PendingAudit = 15,
  SourceListingState_OptedOut = 16,
  SourceListingState_AwaitingSurvey = 17,
  SourceListingState_StateAuditing = 18,
  SourceListingState_ClaimManually = 19,
  SourceListingState_ClaimDenied = 20,
  SourceListingState_CorrectionDenied = 21,
  SourceListingState_MergeDenied = 22,
  SourceListingState_ManagerEscalation = 23,
  SourceListingState_CustomerNoActionRequired = 24,
  SourceListingState_InvalidCredentials = 25,
  SourceListingState_InvalidURL = 26,
  SourceListingState_VerificationRequired = 27,
  SourceListingState_VerificationPending = 28
};

enum DayOfWeek {
  DayOfWeek_Sunday = 1,
  DayOfWeek_Monday = 2,
  DayOfWeek_Tuesday = 3,
  DayOfWeek_Wednesday = 4,
  DayOfWeek_Thursday = 5,
  DayOfWeek_Friday = 6,
  DayOfWeek_Saturday = 7
};

@interface TimeRange : NSObject <TBase, NSCoding> {
  int32_t __openHour;
  int32_t __openMinutes;
  int32_t __closeHour;
  int32_t __closeMinutes;

  BOOL __openHour_isset;
  BOOL __openMinutes_isset;
  BOOL __closeHour_isset;
  BOOL __closeMinutes_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=openHour, setter=setOpenHour:) int32_t openHour;
@property (nonatomic, getter=openMinutes, setter=setOpenMinutes:) int32_t openMinutes;
@property (nonatomic, getter=closeHour, setter=setCloseHour:) int32_t closeHour;
@property (nonatomic, getter=closeMinutes, setter=setCloseMinutes:) int32_t closeMinutes;
#endif

- (id) init;
- (id) initWithOpenHour: (int32_t) openHour openMinutes: (int32_t) openMinutes closeHour: (int32_t) closeHour closeMinutes: (int32_t) closeMinutes;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) openHour;
- (void) setOpenHour: (int32_t) openHour;
#endif
- (BOOL) openHourIsSet;

#if !__has_feature(objc_arc)
- (int32_t) openMinutes;
- (void) setOpenMinutes: (int32_t) openMinutes;
#endif
- (BOOL) openMinutesIsSet;

#if !__has_feature(objc_arc)
- (int32_t) closeHour;
- (void) setCloseHour: (int32_t) closeHour;
#endif
- (BOOL) closeHourIsSet;

#if !__has_feature(objc_arc)
- (int32_t) closeMinutes;
- (void) setCloseMinutes: (int32_t) closeMinutes;
#endif
- (BOOL) closeMinutesIsSet;

@end

@interface DailyHours : NSObject <TBase, NSCoding> {
  int __day;
  NSMutableArray * __timeRanges;
  BOOL __closed;

  BOOL __day_isset;
  BOOL __timeRanges_isset;
  BOOL __closed_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=day, setter=setDay:) int day;
@property (nonatomic, retain, getter=timeRanges, setter=setTimeRanges:) NSMutableArray * timeRanges;
@property (nonatomic, getter=closed, setter=setClosed:) BOOL closed;
#endif

- (id) init;
- (id) initWithDay: (int) day timeRanges: (NSMutableArray *) timeRanges closed: (BOOL) closed;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) day;
- (void) setDay: (int) day;
#endif
- (BOOL) dayIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) timeRanges;
- (void) setTimeRanges: (NSMutableArray *) timeRanges;
#endif
- (BOOL) timeRangesIsSet;

#if !__has_feature(objc_arc)
- (BOOL) closed;
- (void) setClosed: (BOOL) closed;
#endif
- (BOOL) closedIsSet;

@end

@interface BusinessHours : NSObject <TBase, NSCoding> {
  NSMutableArray * __dailyHours;
  BOOL __primary;
  NSString * __type;

  BOOL __dailyHours_isset;
  BOOL __primary_isset;
  BOOL __type_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=dailyHours, setter=setDailyHours:) NSMutableArray * dailyHours;
@property (nonatomic, getter=primary, setter=setPrimary:) BOOL primary;
@property (nonatomic, retain, getter=type, setter=setType:) NSString * type;
#endif

- (id) init;
- (id) initWithDailyHours: (NSMutableArray *) dailyHours primary: (BOOL) primary type: (NSString *) type;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSMutableArray *) dailyHours;
- (void) setDailyHours: (NSMutableArray *) dailyHours;
#endif
- (BOOL) dailyHoursIsSet;

#if !__has_feature(objc_arc)
- (BOOL) primary;
- (void) setPrimary: (BOOL) primary;
#endif
- (BOOL) primaryIsSet;

#if !__has_feature(objc_arc)
- (NSString *) type;
- (void) setType: (NSString *) type;
#endif
- (BOOL) typeIsSet;

@end

@interface NameAttribute : NSObject <TBase, NSCoding> {
  int __status;
  NSString * __name;
  BOOL __alternative;

  BOOL __status_isset;
  BOOL __name_isset;
  BOOL __alternative_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=status, setter=setStatus:) int status;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, getter=alternative, setter=setAlternative:) BOOL alternative;
#endif

- (id) init;
- (id) initWithStatus: (int) status name: (NSString *) name alternative: (BOOL) alternative;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) status;
- (void) setStatus: (int) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (BOOL) alternative;
- (void) setAlternative: (BOOL) alternative;
#endif
- (BOOL) alternativeIsSet;

@end

@interface AddressAttribute : NSObject <TBase, NSCoding> {
  int __status;
  Address * __address;
  BOOL __alternative;

  BOOL __status_isset;
  BOOL __address_isset;
  BOOL __alternative_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=status, setter=setStatus:) int status;
@property (nonatomic, retain, getter=address, setter=setAddress:) Address * address;
@property (nonatomic, getter=alternative, setter=setAlternative:) BOOL alternative;
#endif

- (id) init;
- (id) initWithStatus: (int) status address: (Address *) address alternative: (BOOL) alternative;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) status;
- (void) setStatus: (int) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (Address *) address;
- (void) setAddress: (Address *) address;
#endif
- (BOOL) addressIsSet;

#if !__has_feature(objc_arc)
- (BOOL) alternative;
- (void) setAlternative: (BOOL) alternative;
#endif
- (BOOL) alternativeIsSet;

@end

@interface PhoneAttribute : NSObject <TBase, NSCoding> {
  int __status;
  NSString * __phone;
  BOOL __alternative;

  BOOL __status_isset;
  BOOL __phone_isset;
  BOOL __alternative_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=status, setter=setStatus:) int status;
@property (nonatomic, retain, getter=phone, setter=setPhone:) NSString * phone;
@property (nonatomic, getter=alternative, setter=setAlternative:) BOOL alternative;
#endif

- (id) init;
- (id) initWithStatus: (int) status phone: (NSString *) phone alternative: (BOOL) alternative;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) status;
- (void) setStatus: (int) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (NSString *) phone;
- (void) setPhone: (NSString *) phone;
#endif
- (BOOL) phoneIsSet;

#if !__has_feature(objc_arc)
- (BOOL) alternative;
- (void) setAlternative: (BOOL) alternative;
#endif
- (BOOL) alternativeIsSet;

@end

@interface WebAttribute : NSObject <TBase, NSCoding> {
  int __status;
  NSString * __web;
  BOOL __alternative;

  BOOL __status_isset;
  BOOL __web_isset;
  BOOL __alternative_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=status, setter=setStatus:) int status;
@property (nonatomic, retain, getter=web, setter=setWeb:) NSString * web;
@property (nonatomic, getter=alternative, setter=setAlternative:) BOOL alternative;
#endif

- (id) init;
- (id) initWithStatus: (int) status web: (NSString *) web alternative: (BOOL) alternative;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) status;
- (void) setStatus: (int) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (NSString *) web;
- (void) setWeb: (NSString *) web;
#endif
- (BOOL) webIsSet;

#if !__has_feature(objc_arc)
- (BOOL) alternative;
- (void) setAlternative: (BOOL) alternative;
#endif
- (BOOL) alternativeIsSet;

@end

@interface PhotosAttribute : NSObject <TBase, NSCoding> {
  int __status;
  NSMutableArray * __photos;

  BOOL __status_isset;
  BOOL __photos_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=status, setter=setStatus:) int status;
@property (nonatomic, retain, getter=photos, setter=setPhotos:) NSMutableArray * photos;
#endif

- (id) init;
- (id) initWithStatus: (int) status photos: (NSMutableArray *) photos;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) status;
- (void) setStatus: (int) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) photos;
- (void) setPhotos: (NSMutableArray *) photos;
#endif
- (BOOL) photosIsSet;

@end

@interface CategoriesAttribute : NSObject <TBase, NSCoding> {
  int __status;
  NSMutableArray * __categories;

  BOOL __status_isset;
  BOOL __categories_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=status, setter=setStatus:) int status;
@property (nonatomic, retain, getter=categories, setter=setCategories:) NSMutableArray * categories;
#endif

- (id) init;
- (id) initWithStatus: (int) status categories: (NSMutableArray *) categories;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) status;
- (void) setStatus: (int) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) categories;
- (void) setCategories: (NSMutableArray *) categories;
#endif
- (BOOL) categoriesIsSet;

@end

@interface BusinessHoursAttribute : NSObject <TBase, NSCoding> {
  int __status;
  NSMutableArray * __businessHours;

  BOOL __status_isset;
  BOOL __businessHours_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=status, setter=setStatus:) int status;
@property (nonatomic, retain, getter=businessHours, setter=setBusinessHours:) NSMutableArray * businessHours;
#endif

- (id) init;
- (id) initWithStatus: (int) status businessHours: (NSMutableArray *) businessHours;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) status;
- (void) setStatus: (int) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) businessHours;
- (void) setBusinessHours: (NSMutableArray *) businessHours;
#endif
- (BOOL) businessHoursIsSet;

@end

@interface DescriptionAttribute : NSObject <TBase, NSCoding> {
  int __status;
  NSString * __descriptionAttr;
  BOOL __alternative;

  BOOL __status_isset;
  BOOL __descriptionAttr_isset;
  BOOL __alternative_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=status, setter=setStatus:) int status;
@property (nonatomic, retain, getter=descriptionAttr, setter=setDescriptionAttr:) NSString * descriptionAttr;
@property (nonatomic, getter=alternative, setter=setAlternative:) BOOL alternative;
#endif

- (id) init;
- (id) initWithStatus: (int) status descriptionAttr: (NSString *) descriptionAttr alternative: (BOOL) alternative;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) status;
- (void) setStatus: (int) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (NSString *) descriptionAttr;
- (void) setDescriptionAttr: (NSString *) descriptionAttr;
#endif
- (BOOL) descriptionAttrIsSet;

#if !__has_feature(objc_arc)
- (BOOL) alternative;
- (void) setAlternative: (BOOL) alternative;
#endif
- (BOOL) alternativeIsSet;

@end

@interface SourceListing : NSObject <TBase, NSCoding> {
  NSString * __id;
  NSString * __listingAuditID;
  NSString * __locationID;
  int __listingStatus;
  NSString * __sourceId;
  NSString * __sourceName;
  NSString * __sourceSmallIconPath;
  NSString * __sourceLargeIconPath;
  NSString * __url;
  int __sourceListingState;
  int __claimedState;
  NameAttribute * __nameAttribute;
  AddressAttribute * __addressAttribute;
  PhoneAttribute * __phoneAttribute;
  WebAttribute * __webAttribute;
  PhotosAttribute * __photosAttribute;
  CategoriesAttribute * __categoriesAttribute;
  BusinessHoursAttribute * __businessHoursAttribute;
  DescriptionAttribute * __descriptionAttribute;
  double __score;
  int64_t __fixDate;
  NSString * __notes;

  BOOL __id_isset;
  BOOL __listingAuditID_isset;
  BOOL __locationID_isset;
  BOOL __listingStatus_isset;
  BOOL __sourceId_isset;
  BOOL __sourceName_isset;
  BOOL __sourceSmallIconPath_isset;
  BOOL __sourceLargeIconPath_isset;
  BOOL __url_isset;
  BOOL __sourceListingState_isset;
  BOOL __claimedState_isset;
  BOOL __nameAttribute_isset;
  BOOL __addressAttribute_isset;
  BOOL __phoneAttribute_isset;
  BOOL __webAttribute_isset;
  BOOL __photosAttribute_isset;
  BOOL __categoriesAttribute_isset;
  BOOL __businessHoursAttribute_isset;
  BOOL __descriptionAttribute_isset;
  BOOL __score_isset;
  BOOL __fixDate_isset;
  BOOL __notes_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) NSString * id;
@property (nonatomic, retain, getter=listingAuditID, setter=setListingAuditID:) NSString * listingAuditID;
@property (nonatomic, retain, getter=locationID, setter=setLocationID:) NSString * locationID;
@property (nonatomic, getter=listingStatus, setter=setListingStatus:) int listingStatus;
@property (nonatomic, retain, getter=sourceId, setter=setSourceId:) NSString * sourceId;
@property (nonatomic, retain, getter=sourceName, setter=setSourceName:) NSString * sourceName;
@property (nonatomic, retain, getter=sourceSmallIconPath, setter=setSourceSmallIconPath:) NSString * sourceSmallIconPath;
@property (nonatomic, retain, getter=sourceLargeIconPath, setter=setSourceLargeIconPath:) NSString * sourceLargeIconPath;
@property (nonatomic, retain, getter=url, setter=setUrl:) NSString * url;
@property (nonatomic, getter=sourceListingState, setter=setSourceListingState:) int sourceListingState;
@property (nonatomic, getter=claimedState, setter=setClaimedState:) int claimedState;
@property (nonatomic, retain, getter=nameAttribute, setter=setNameAttribute:) NameAttribute * nameAttribute;
@property (nonatomic, retain, getter=addressAttribute, setter=setAddressAttribute:) AddressAttribute * addressAttribute;
@property (nonatomic, retain, getter=phoneAttribute, setter=setPhoneAttribute:) PhoneAttribute * phoneAttribute;
@property (nonatomic, retain, getter=webAttribute, setter=setWebAttribute:) WebAttribute * webAttribute;
@property (nonatomic, retain, getter=photosAttribute, setter=setPhotosAttribute:) PhotosAttribute * photosAttribute;
@property (nonatomic, retain, getter=categoriesAttribute, setter=setCategoriesAttribute:) CategoriesAttribute * categoriesAttribute;
@property (nonatomic, retain, getter=businessHoursAttribute, setter=setBusinessHoursAttribute:) BusinessHoursAttribute * businessHoursAttribute;
@property (nonatomic, retain, getter=descriptionAttribute, setter=setDescriptionAttribute:) DescriptionAttribute * descriptionAttribute;
@property (nonatomic, getter=score, setter=setScore:) double score;
@property (nonatomic, getter=fixDate, setter=setFixDate:) int64_t fixDate;
@property (nonatomic, retain, getter=notes, setter=setNotes:) NSString * notes;
#endif

- (id) init;
- (id) initWithId: (NSString *) id listingAuditID: (NSString *) listingAuditID locationID: (NSString *) locationID listingStatus: (int) listingStatus sourceId: (NSString *) sourceId sourceName: (NSString *) sourceName sourceSmallIconPath: (NSString *) sourceSmallIconPath sourceLargeIconPath: (NSString *) sourceLargeIconPath url: (NSString *) url sourceListingState: (int) sourceListingState claimedState: (int) claimedState nameAttribute: (NameAttribute *) nameAttribute addressAttribute: (AddressAttribute *) addressAttribute phoneAttribute: (PhoneAttribute *) phoneAttribute webAttribute: (WebAttribute *) webAttribute photosAttribute: (PhotosAttribute *) photosAttribute categoriesAttribute: (CategoriesAttribute *) categoriesAttribute businessHoursAttribute: (BusinessHoursAttribute *) businessHoursAttribute descriptionAttribute: (DescriptionAttribute *) descriptionAttribute score: (double) score fixDate: (int64_t) fixDate notes: (NSString *) notes;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) id;
- (void) setId: (NSString *) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) listingAuditID;
- (void) setListingAuditID: (NSString *) listingAuditID;
#endif
- (BOOL) listingAuditIDIsSet;

#if !__has_feature(objc_arc)
- (NSString *) locationID;
- (void) setLocationID: (NSString *) locationID;
#endif
- (BOOL) locationIDIsSet;

#if !__has_feature(objc_arc)
- (int) listingStatus;
- (void) setListingStatus: (int) listingStatus;
#endif
- (BOOL) listingStatusIsSet;

#if !__has_feature(objc_arc)
- (NSString *) sourceId;
- (void) setSourceId: (NSString *) sourceId;
#endif
- (BOOL) sourceIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) sourceName;
- (void) setSourceName: (NSString *) sourceName;
#endif
- (BOOL) sourceNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) sourceSmallIconPath;
- (void) setSourceSmallIconPath: (NSString *) sourceSmallIconPath;
#endif
- (BOOL) sourceSmallIconPathIsSet;

#if !__has_feature(objc_arc)
- (NSString *) sourceLargeIconPath;
- (void) setSourceLargeIconPath: (NSString *) sourceLargeIconPath;
#endif
- (BOOL) sourceLargeIconPathIsSet;

#if !__has_feature(objc_arc)
- (NSString *) url;
- (void) setUrl: (NSString *) url;
#endif
- (BOOL) urlIsSet;

#if !__has_feature(objc_arc)
- (int) sourceListingState;
- (void) setSourceListingState: (int) sourceListingState;
#endif
- (BOOL) sourceListingStateIsSet;

#if !__has_feature(objc_arc)
- (int) claimedState;
- (void) setClaimedState: (int) claimedState;
#endif
- (BOOL) claimedStateIsSet;

#if !__has_feature(objc_arc)
- (NameAttribute *) nameAttribute;
- (void) setNameAttribute: (NameAttribute *) nameAttribute;
#endif
- (BOOL) nameAttributeIsSet;

#if !__has_feature(objc_arc)
- (AddressAttribute *) addressAttribute;
- (void) setAddressAttribute: (AddressAttribute *) addressAttribute;
#endif
- (BOOL) addressAttributeIsSet;

#if !__has_feature(objc_arc)
- (PhoneAttribute *) phoneAttribute;
- (void) setPhoneAttribute: (PhoneAttribute *) phoneAttribute;
#endif
- (BOOL) phoneAttributeIsSet;

#if !__has_feature(objc_arc)
- (WebAttribute *) webAttribute;
- (void) setWebAttribute: (WebAttribute *) webAttribute;
#endif
- (BOOL) webAttributeIsSet;

#if !__has_feature(objc_arc)
- (PhotosAttribute *) photosAttribute;
- (void) setPhotosAttribute: (PhotosAttribute *) photosAttribute;
#endif
- (BOOL) photosAttributeIsSet;

#if !__has_feature(objc_arc)
- (CategoriesAttribute *) categoriesAttribute;
- (void) setCategoriesAttribute: (CategoriesAttribute *) categoriesAttribute;
#endif
- (BOOL) categoriesAttributeIsSet;

#if !__has_feature(objc_arc)
- (BusinessHoursAttribute *) businessHoursAttribute;
- (void) setBusinessHoursAttribute: (BusinessHoursAttribute *) businessHoursAttribute;
#endif
- (BOOL) businessHoursAttributeIsSet;

#if !__has_feature(objc_arc)
- (DescriptionAttribute *) descriptionAttribute;
- (void) setDescriptionAttribute: (DescriptionAttribute *) descriptionAttribute;
#endif
- (BOOL) descriptionAttributeIsSet;

#if !__has_feature(objc_arc)
- (double) score;
- (void) setScore: (double) score;
#endif
- (BOOL) scoreIsSet;

#if !__has_feature(objc_arc)
- (int64_t) fixDate;
- (void) setFixDate: (int64_t) fixDate;
#endif
- (BOOL) fixDateIsSet;

#if !__has_feature(objc_arc)
- (NSString *) notes;
- (void) setNotes: (NSString *) notes;
#endif
- (BOOL) notesIsSet;

@end

@interface LocationListing : NSObject <TBase, NSCoding> {
  NSString * __listingID;
  NSString * __locationID;
  NSString * __locationName;
  NSMutableArray * __sourceListings;
  double __score;
  int32_t __expected;
  int32_t __missing;
  int32_t __duplicate;
  int32_t __incorrect;
  int32_t __correct;
  int32_t __claimed;
  int32_t __unclaimed;
  int64_t __fixDate;

  BOOL __listingID_isset;
  BOOL __locationID_isset;
  BOOL __locationName_isset;
  BOOL __sourceListings_isset;
  BOOL __score_isset;
  BOOL __expected_isset;
  BOOL __missing_isset;
  BOOL __duplicate_isset;
  BOOL __incorrect_isset;
  BOOL __correct_isset;
  BOOL __claimed_isset;
  BOOL __unclaimed_isset;
  BOOL __fixDate_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=listingID, setter=setListingID:) NSString * listingID;
@property (nonatomic, retain, getter=locationID, setter=setLocationID:) NSString * locationID;
@property (nonatomic, retain, getter=locationName, setter=setLocationName:) NSString * locationName;
@property (nonatomic, retain, getter=sourceListings, setter=setSourceListings:) NSMutableArray * sourceListings;
@property (nonatomic, getter=score, setter=setScore:) double score;
@property (nonatomic, getter=expected, setter=setExpected:) int32_t expected;
@property (nonatomic, getter=missing, setter=setMissing:) int32_t missing;
@property (nonatomic, getter=duplicate, setter=setDuplicate:) int32_t duplicate;
@property (nonatomic, getter=incorrect, setter=setIncorrect:) int32_t incorrect;
@property (nonatomic, getter=correct, setter=setCorrect:) int32_t correct;
@property (nonatomic, getter=claimed, setter=setClaimed:) int32_t claimed;
@property (nonatomic, getter=unclaimed, setter=setUnclaimed:) int32_t unclaimed;
@property (nonatomic, getter=fixDate, setter=setFixDate:) int64_t fixDate;
#endif

- (id) init;
- (id) initWithListingID: (NSString *) listingID locationID: (NSString *) locationID locationName: (NSString *) locationName sourceListings: (NSMutableArray *) sourceListings score: (double) score expected: (int32_t) expected missing: (int32_t) missing duplicate: (int32_t) duplicate incorrect: (int32_t) incorrect correct: (int32_t) correct claimed: (int32_t) claimed unclaimed: (int32_t) unclaimed fixDate: (int64_t) fixDate;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) listingID;
- (void) setListingID: (NSString *) listingID;
#endif
- (BOOL) listingIDIsSet;

#if !__has_feature(objc_arc)
- (NSString *) locationID;
- (void) setLocationID: (NSString *) locationID;
#endif
- (BOOL) locationIDIsSet;

#if !__has_feature(objc_arc)
- (NSString *) locationName;
- (void) setLocationName: (NSString *) locationName;
#endif
- (BOOL) locationNameIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) sourceListings;
- (void) setSourceListings: (NSMutableArray *) sourceListings;
#endif
- (BOOL) sourceListingsIsSet;

#if !__has_feature(objc_arc)
- (double) score;
- (void) setScore: (double) score;
#endif
- (BOOL) scoreIsSet;

#if !__has_feature(objc_arc)
- (int32_t) expected;
- (void) setExpected: (int32_t) expected;
#endif
- (BOOL) expectedIsSet;

#if !__has_feature(objc_arc)
- (int32_t) missing;
- (void) setMissing: (int32_t) missing;
#endif
- (BOOL) missingIsSet;

#if !__has_feature(objc_arc)
- (int32_t) duplicate;
- (void) setDuplicate: (int32_t) duplicate;
#endif
- (BOOL) duplicateIsSet;

#if !__has_feature(objc_arc)
- (int32_t) incorrect;
- (void) setIncorrect: (int32_t) incorrect;
#endif
- (BOOL) incorrectIsSet;

#if !__has_feature(objc_arc)
- (int32_t) correct;
- (void) setCorrect: (int32_t) correct;
#endif
- (BOOL) correctIsSet;

#if !__has_feature(objc_arc)
- (int32_t) claimed;
- (void) setClaimed: (int32_t) claimed;
#endif
- (BOOL) claimedIsSet;

#if !__has_feature(objc_arc)
- (int32_t) unclaimed;
- (void) setUnclaimed: (int32_t) unclaimed;
#endif
- (BOOL) unclaimedIsSet;

#if !__has_feature(objc_arc)
- (int64_t) fixDate;
- (void) setFixDate: (int64_t) fixDate;
#endif
- (BOOL) fixDateIsSet;

@end

@interface MobileListingConstants : NSObject {
}
@end
