/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"

#import "MobileCommon.h"
#import "MobileListing.h"
#import "MobileActivity.h"

enum ReviewType {
  ReviewType_Kiosk = 1,
  ReviewType_RequestReview = 2,
  ReviewType_Social = 3
};

enum MediaType {
  MediaType_Photo = 1,
  MediaType_Video = 2
};

enum Sentiment {
  Sentiment_Positive = 0,
  Sentiment_Neutral = 1,
  Sentiment_Negative = 2,
  Sentiment_None = 3
};

enum MimeType {
  MimeType_Jpeg = 1,
  MimeType_Jpg = 2,
  MimeType_Png = 3,
  MimeType_Gif = 4
};

enum PostAction {
  PostAction_Approve = 1,
  PostAction_Reject = 2
};

enum State {
  State_PostFailed = 1,
  State_Rejected = 2,
  State_Canceled = 3,
  State_PendingApproval = 4,
  State_Approved = 5,
  State_PostSucceeded = 6
};

typedef NSString * SourceCode;

@interface SummaryValue : NSObject <TBase, NSCoding> {
  NSString * __name;
  double __value;
  NSMutableDictionary * __addlProps;

  BOOL __name_isset;
  BOOL __value_isset;
  BOOL __addlProps_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, getter=value, setter=setValue:) double value;
@property (nonatomic, retain, getter=addlProps, setter=setAddlProps:) NSMutableDictionary * addlProps;
#endif

- (id) init;
- (id) initWithName: (NSString *) name value: (double) value addlProps: (NSMutableDictionary *) addlProps;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (double) value;
- (void) setValue: (double) value;
#endif
- (BOOL) valueIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) addlProps;
- (void) setAddlProps: (NSMutableDictionary *) addlProps;
#endif
- (BOOL) addlPropsIsSet;

@end

@interface ReviewResponse : NSObject <TBase, NSCoding> {
  NSString * __reviewResponseComment;
  int64_t __reviewResponseCreateDt;
  NSString * __reviewResponseName;
  NSString * __createdDtPrettyLong;

  BOOL __reviewResponseComment_isset;
  BOOL __reviewResponseCreateDt_isset;
  BOOL __reviewResponseName_isset;
  BOOL __createdDtPrettyLong_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=reviewResponseComment, setter=setReviewResponseComment:) NSString * reviewResponseComment;
@property (nonatomic, getter=reviewResponseCreateDt, setter=setReviewResponseCreateDt:) int64_t reviewResponseCreateDt;
@property (nonatomic, retain, getter=reviewResponseName, setter=setReviewResponseName:) NSString * reviewResponseName;
@property (nonatomic, retain, getter=createdDtPrettyLong, setter=setCreatedDtPrettyLong:) NSString * createdDtPrettyLong;
#endif

- (id) init;
- (id) initWithReviewResponseComment: (NSString *) reviewResponseComment reviewResponseCreateDt: (int64_t) reviewResponseCreateDt reviewResponseName: (NSString *) reviewResponseName createdDtPrettyLong: (NSString *) createdDtPrettyLong;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) reviewResponseComment;
- (void) setReviewResponseComment: (NSString *) reviewResponseComment;
#endif
- (BOOL) reviewResponseCommentIsSet;

#if !__has_feature(objc_arc)
- (int64_t) reviewResponseCreateDt;
- (void) setReviewResponseCreateDt: (int64_t) reviewResponseCreateDt;
#endif
- (BOOL) reviewResponseCreateDtIsSet;

#if !__has_feature(objc_arc)
- (NSString *) reviewResponseName;
- (void) setReviewResponseName: (NSString *) reviewResponseName;
#endif
- (BOOL) reviewResponseNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) createdDtPrettyLong;
- (void) setCreatedDtPrettyLong: (NSString *) createdDtPrettyLong;
#endif
- (BOOL) createdDtPrettyLongIsSet;

@end

@interface Review : NSObject <TBase, NSCoding> {
  NSString * __id;
  NSString * __locationName;
  NSString * __reviewerId;
  NSString * __reviewerName;
  NSString * __reviewerPhotoUrl;
  NSString * __reviewerProfileUrl;
  NSString * __reviewerEmail;
  NSString * __reviewerPhone;
  double __rating;
  double __normalizedRating;
  NSString * __date;
  int64_t __ratedTimestamp;
  int64_t __addedTimestamp;
  int64_t __updatedTimestamp;
  NSString * __comment;
  NSMutableArray * __tags;
  SourceCode __sourceId;
  NSString * __sourceName;
  NSString * __sourceSmallIconPath;
  NSString * __sourceLargeIconPath;
  RatingScale * __sourceOverallRS;
  NSMutableDictionary * __sourceSubRatingRS;
  SourceGroup __sourceGroup;
  BOOL __isSourceRequestReviewable;
  NSString * __sourceURL;
  SourceCode __originSourceId;
  SourceCode __originSourceName;
  NSString * __originSourceURL;
  NSMutableArray * __properties;
  NSString * __commentTitle;
  int64_t __publishDate;
  BOOL __published;
  BOOL __requested;
  int32_t __numReplies;
  int64_t __lastReplyDate;
  int32_t __nps;
  NSMutableArray * __rresponses;
  BOOL __hasResponded;
  BOOL __isStarRatingEnabled;
  NSMutableArray * __allowedActions;
  int __sentiment;
  NSString * __createdDtPrettyShort;
  NSMutableArray * __subRatings;
  NSString * __shortFormattedDate;
  NSMutableArray * __notes;

  BOOL __id_isset;
  BOOL __locationName_isset;
  BOOL __reviewerId_isset;
  BOOL __reviewerName_isset;
  BOOL __reviewerPhotoUrl_isset;
  BOOL __reviewerProfileUrl_isset;
  BOOL __reviewerEmail_isset;
  BOOL __reviewerPhone_isset;
  BOOL __rating_isset;
  BOOL __normalizedRating_isset;
  BOOL __date_isset;
  BOOL __ratedTimestamp_isset;
  BOOL __addedTimestamp_isset;
  BOOL __updatedTimestamp_isset;
  BOOL __comment_isset;
  BOOL __tags_isset;
  BOOL __sourceId_isset;
  BOOL __sourceName_isset;
  BOOL __sourceSmallIconPath_isset;
  BOOL __sourceLargeIconPath_isset;
  BOOL __sourceOverallRS_isset;
  BOOL __sourceSubRatingRS_isset;
  BOOL __sourceGroup_isset;
  BOOL __isSourceRequestReviewable_isset;
  BOOL __sourceURL_isset;
  BOOL __originSourceId_isset;
  BOOL __originSourceName_isset;
  BOOL __originSourceURL_isset;
  BOOL __properties_isset;
  BOOL __commentTitle_isset;
  BOOL __publishDate_isset;
  BOOL __published_isset;
  BOOL __requested_isset;
  BOOL __numReplies_isset;
  BOOL __lastReplyDate_isset;
  BOOL __nps_isset;
  BOOL __rresponses_isset;
  BOOL __hasResponded_isset;
  BOOL __isStarRatingEnabled_isset;
  BOOL __allowedActions_isset;
  BOOL __sentiment_isset;
  BOOL __createdDtPrettyShort_isset;
  BOOL __subRatings_isset;
  BOOL __shortFormattedDate_isset;
  BOOL __notes_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) NSString * id;
@property (nonatomic, retain, getter=locationName, setter=setLocationName:) NSString * locationName;
@property (nonatomic, retain, getter=reviewerId, setter=setReviewerId:) NSString * reviewerId;
@property (nonatomic, retain, getter=reviewerName, setter=setReviewerName:) NSString * reviewerName;
@property (nonatomic, retain, getter=reviewerPhotoUrl, setter=setReviewerPhotoUrl:) NSString * reviewerPhotoUrl;
@property (nonatomic, retain, getter=reviewerProfileUrl, setter=setReviewerProfileUrl:) NSString * reviewerProfileUrl;
@property (nonatomic, retain, getter=reviewerEmail, setter=setReviewerEmail:) NSString * reviewerEmail;
@property (nonatomic, retain, getter=reviewerPhone, setter=setReviewerPhone:) NSString * reviewerPhone;
@property (nonatomic, getter=rating, setter=setRating:) double rating;
@property (nonatomic, getter=normalizedRating, setter=setNormalizedRating:) double normalizedRating;
@property (nonatomic, retain, getter=date, setter=setDate:) NSString * date;
@property (nonatomic, getter=ratedTimestamp, setter=setRatedTimestamp:) int64_t ratedTimestamp;
@property (nonatomic, getter=addedTimestamp, setter=setAddedTimestamp:) int64_t addedTimestamp;
@property (nonatomic, getter=updatedTimestamp, setter=setUpdatedTimestamp:) int64_t updatedTimestamp;
@property (nonatomic, retain, getter=comment, setter=setComment:) NSString * comment;
@property (nonatomic, retain, getter=tags, setter=setTags:) NSMutableArray * tags;
@property (nonatomic, retain, getter=sourceId, setter=setSourceId:) SourceCode sourceId;
@property (nonatomic, retain, getter=sourceName, setter=setSourceName:) NSString * sourceName;
@property (nonatomic, retain, getter=sourceSmallIconPath, setter=setSourceSmallIconPath:) NSString * sourceSmallIconPath;
@property (nonatomic, retain, getter=sourceLargeIconPath, setter=setSourceLargeIconPath:) NSString * sourceLargeIconPath;
@property (nonatomic, retain, getter=sourceOverallRS, setter=setSourceOverallRS:) RatingScale * sourceOverallRS;
@property (nonatomic, retain, getter=sourceSubRatingRS, setter=setSourceSubRatingRS:) NSMutableDictionary * sourceSubRatingRS;
@property (nonatomic, retain, getter=sourceGroup, setter=setSourceGroup:) SourceGroup sourceGroup;
@property (nonatomic, getter=isSourceRequestReviewable, setter=setIsSourceRequestReviewable:) BOOL isSourceRequestReviewable;
@property (nonatomic, retain, getter=sourceURL, setter=setSourceURL:) NSString * sourceURL;
@property (nonatomic, retain, getter=originSourceId, setter=setOriginSourceId:) SourceCode originSourceId;
@property (nonatomic, retain, getter=originSourceName, setter=setOriginSourceName:) SourceCode originSourceName;
@property (nonatomic, retain, getter=originSourceURL, setter=setOriginSourceURL:) NSString * originSourceURL;
@property (nonatomic, retain, getter=properties, setter=setProperties:) NSMutableArray * properties;
@property (nonatomic, retain, getter=commentTitle, setter=setCommentTitle:) NSString * commentTitle;
@property (nonatomic, getter=publishDate, setter=setPublishDate:) int64_t publishDate;
@property (nonatomic, getter=published, setter=setPublished:) BOOL published;
@property (nonatomic, getter=requested, setter=setRequested:) BOOL requested;
@property (nonatomic, getter=numReplies, setter=setNumReplies:) int32_t numReplies;
@property (nonatomic, getter=lastReplyDate, setter=setLastReplyDate:) int64_t lastReplyDate;
@property (nonatomic, getter=nps, setter=setNps:) int32_t nps;
@property (nonatomic, retain, getter=rresponses, setter=setRresponses:) NSMutableArray * rresponses;
@property (nonatomic, getter=hasResponded, setter=setHasResponded:) BOOL hasResponded;
@property (nonatomic, getter=isStarRatingEnabled, setter=setIsStarRatingEnabled:) BOOL isStarRatingEnabled;
@property (nonatomic, retain, getter=allowedActions, setter=setAllowedActions:) NSMutableArray * allowedActions;
@property (nonatomic, getter=sentiment, setter=setSentiment:) int sentiment;
@property (nonatomic, retain, getter=createdDtPrettyShort, setter=setCreatedDtPrettyShort:) NSString * createdDtPrettyShort;
@property (nonatomic, retain, getter=subRatings, setter=setSubRatings:) NSMutableArray * subRatings;
@property (nonatomic, retain, getter=shortFormattedDate, setter=setShortFormattedDate:) NSString * shortFormattedDate;
@property (nonatomic, retain, getter=notes, setter=setNotes:) NSMutableArray * notes;
#endif

- (id) init;
- (id) initWithId: (NSString *) id locationName: (NSString *) locationName reviewerId: (NSString *) reviewerId reviewerName: (NSString *) reviewerName reviewerPhotoUrl: (NSString *) reviewerPhotoUrl reviewerProfileUrl: (NSString *) reviewerProfileUrl reviewerEmail: (NSString *) reviewerEmail reviewerPhone: (NSString *) reviewerPhone rating: (double) rating normalizedRating: (double) normalizedRating date: (NSString *) date ratedTimestamp: (int64_t) ratedTimestamp addedTimestamp: (int64_t) addedTimestamp updatedTimestamp: (int64_t) updatedTimestamp comment: (NSString *) comment tags: (NSMutableArray *) tags sourceId: (SourceCode) sourceId sourceName: (NSString *) sourceName sourceSmallIconPath: (NSString *) sourceSmallIconPath sourceLargeIconPath: (NSString *) sourceLargeIconPath sourceOverallRS: (RatingScale *) sourceOverallRS sourceSubRatingRS: (NSMutableDictionary *) sourceSubRatingRS sourceGroup: (SourceGroup) sourceGroup isSourceRequestReviewable: (BOOL) isSourceRequestReviewable sourceURL: (NSString *) sourceURL originSourceId: (SourceCode) originSourceId originSourceName: (SourceCode) originSourceName originSourceURL: (NSString *) originSourceURL properties: (NSMutableArray *) properties commentTitle: (NSString *) commentTitle publishDate: (int64_t) publishDate published: (BOOL) published requested: (BOOL) requested numReplies: (int32_t) numReplies lastReplyDate: (int64_t) lastReplyDate nps: (int32_t) nps rresponses: (NSMutableArray *) rresponses hasResponded: (BOOL) hasResponded isStarRatingEnabled: (BOOL) isStarRatingEnabled allowedActions: (NSMutableArray *) allowedActions sentiment: (int) sentiment createdDtPrettyShort: (NSString *) createdDtPrettyShort subRatings: (NSMutableArray *) subRatings shortFormattedDate: (NSString *) shortFormattedDate notes: (NSMutableArray *) notes;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) id;
- (void) setId: (NSString *) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) locationName;
- (void) setLocationName: (NSString *) locationName;
#endif
- (BOOL) locationNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) reviewerId;
- (void) setReviewerId: (NSString *) reviewerId;
#endif
- (BOOL) reviewerIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) reviewerName;
- (void) setReviewerName: (NSString *) reviewerName;
#endif
- (BOOL) reviewerNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) reviewerPhotoUrl;
- (void) setReviewerPhotoUrl: (NSString *) reviewerPhotoUrl;
#endif
- (BOOL) reviewerPhotoUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) reviewerProfileUrl;
- (void) setReviewerProfileUrl: (NSString *) reviewerProfileUrl;
#endif
- (BOOL) reviewerProfileUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) reviewerEmail;
- (void) setReviewerEmail: (NSString *) reviewerEmail;
#endif
- (BOOL) reviewerEmailIsSet;

#if !__has_feature(objc_arc)
- (NSString *) reviewerPhone;
- (void) setReviewerPhone: (NSString *) reviewerPhone;
#endif
- (BOOL) reviewerPhoneIsSet;

#if !__has_feature(objc_arc)
- (double) rating;
- (void) setRating: (double) rating;
#endif
- (BOOL) ratingIsSet;

#if !__has_feature(objc_arc)
- (double) normalizedRating;
- (void) setNormalizedRating: (double) normalizedRating;
#endif
- (BOOL) normalizedRatingIsSet;

#if !__has_feature(objc_arc)
- (NSString *) date;
- (void) setDate: (NSString *) date;
#endif
- (BOOL) dateIsSet;

#if !__has_feature(objc_arc)
- (int64_t) ratedTimestamp;
- (void) setRatedTimestamp: (int64_t) ratedTimestamp;
#endif
- (BOOL) ratedTimestampIsSet;

#if !__has_feature(objc_arc)
- (int64_t) addedTimestamp;
- (void) setAddedTimestamp: (int64_t) addedTimestamp;
#endif
- (BOOL) addedTimestampIsSet;

#if !__has_feature(objc_arc)
- (int64_t) updatedTimestamp;
- (void) setUpdatedTimestamp: (int64_t) updatedTimestamp;
#endif
- (BOOL) updatedTimestampIsSet;

#if !__has_feature(objc_arc)
- (NSString *) comment;
- (void) setComment: (NSString *) comment;
#endif
- (BOOL) commentIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) tags;
- (void) setTags: (NSMutableArray *) tags;
#endif
- (BOOL) tagsIsSet;

#if !__has_feature(objc_arc)
- (SourceCode) sourceId;
- (void) setSourceId: (SourceCode) sourceId;
#endif
- (BOOL) sourceIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) sourceName;
- (void) setSourceName: (NSString *) sourceName;
#endif
- (BOOL) sourceNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) sourceSmallIconPath;
- (void) setSourceSmallIconPath: (NSString *) sourceSmallIconPath;
#endif
- (BOOL) sourceSmallIconPathIsSet;

#if !__has_feature(objc_arc)
- (NSString *) sourceLargeIconPath;
- (void) setSourceLargeIconPath: (NSString *) sourceLargeIconPath;
#endif
- (BOOL) sourceLargeIconPathIsSet;

#if !__has_feature(objc_arc)
- (RatingScale *) sourceOverallRS;
- (void) setSourceOverallRS: (RatingScale *) sourceOverallRS;
#endif
- (BOOL) sourceOverallRSIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) sourceSubRatingRS;
- (void) setSourceSubRatingRS: (NSMutableDictionary *) sourceSubRatingRS;
#endif
- (BOOL) sourceSubRatingRSIsSet;

#if !__has_feature(objc_arc)
- (SourceGroup) sourceGroup;
- (void) setSourceGroup: (SourceGroup) sourceGroup;
#endif
- (BOOL) sourceGroupIsSet;

#if !__has_feature(objc_arc)
- (BOOL) isSourceRequestReviewable;
- (void) setIsSourceRequestReviewable: (BOOL) isSourceRequestReviewable;
#endif
- (BOOL) isSourceRequestReviewableIsSet;

#if !__has_feature(objc_arc)
- (NSString *) sourceURL;
- (void) setSourceURL: (NSString *) sourceURL;
#endif
- (BOOL) sourceURLIsSet;

#if !__has_feature(objc_arc)
- (SourceCode) originSourceId;
- (void) setOriginSourceId: (SourceCode) originSourceId;
#endif
- (BOOL) originSourceIdIsSet;

#if !__has_feature(objc_arc)
- (SourceCode) originSourceName;
- (void) setOriginSourceName: (SourceCode) originSourceName;
#endif
- (BOOL) originSourceNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) originSourceURL;
- (void) setOriginSourceURL: (NSString *) originSourceURL;
#endif
- (BOOL) originSourceURLIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) properties;
- (void) setProperties: (NSMutableArray *) properties;
#endif
- (BOOL) propertiesIsSet;

#if !__has_feature(objc_arc)
- (NSString *) commentTitle;
- (void) setCommentTitle: (NSString *) commentTitle;
#endif
- (BOOL) commentTitleIsSet;

#if !__has_feature(objc_arc)
- (int64_t) publishDate;
- (void) setPublishDate: (int64_t) publishDate;
#endif
- (BOOL) publishDateIsSet;

#if !__has_feature(objc_arc)
- (BOOL) published;
- (void) setPublished: (BOOL) published;
#endif
- (BOOL) publishedIsSet;

#if !__has_feature(objc_arc)
- (BOOL) requested;
- (void) setRequested: (BOOL) requested;
#endif
- (BOOL) requestedIsSet;

#if !__has_feature(objc_arc)
- (int32_t) numReplies;
- (void) setNumReplies: (int32_t) numReplies;
#endif
- (BOOL) numRepliesIsSet;

#if !__has_feature(objc_arc)
- (int64_t) lastReplyDate;
- (void) setLastReplyDate: (int64_t) lastReplyDate;
#endif
- (BOOL) lastReplyDateIsSet;

#if !__has_feature(objc_arc)
- (int32_t) nps;
- (void) setNps: (int32_t) nps;
#endif
- (BOOL) npsIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) rresponses;
- (void) setRresponses: (NSMutableArray *) rresponses;
#endif
- (BOOL) rresponsesIsSet;

#if !__has_feature(objc_arc)
- (BOOL) hasResponded;
- (void) setHasResponded: (BOOL) hasResponded;
#endif
- (BOOL) hasRespondedIsSet;

#if !__has_feature(objc_arc)
- (BOOL) isStarRatingEnabled;
- (void) setIsStarRatingEnabled: (BOOL) isStarRatingEnabled;
#endif
- (BOOL) isStarRatingEnabledIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) allowedActions;
- (void) setAllowedActions: (NSMutableArray *) allowedActions;
#endif
- (BOOL) allowedActionsIsSet;

#if !__has_feature(objc_arc)
- (int) sentiment;
- (void) setSentiment: (int) sentiment;
#endif
- (BOOL) sentimentIsSet;

#if !__has_feature(objc_arc)
- (NSString *) createdDtPrettyShort;
- (void) setCreatedDtPrettyShort: (NSString *) createdDtPrettyShort;
#endif
- (BOOL) createdDtPrettyShortIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) subRatings;
- (void) setSubRatings: (NSMutableArray *) subRatings;
#endif
- (BOOL) subRatingsIsSet;

#if !__has_feature(objc_arc)
- (NSString *) shortFormattedDate;
- (void) setShortFormattedDate: (NSString *) shortFormattedDate;
#endif
- (BOOL) shortFormattedDateIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) notes;
- (void) setNotes: (NSMutableArray *) notes;
#endif
- (BOOL) notesIsSet;

@end

@interface SummaryCell : NSObject <TBase, NSCoding> {
  NSString * __name;
  NSMutableArray * __values;

  BOOL __name_isset;
  BOOL __values_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=values, setter=setValues:) NSMutableArray * values;
#endif

- (id) init;
- (id) initWithName: (NSString *) name values: (NSMutableArray *) values;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) values;
- (void) setValues: (NSMutableArray *) values;
#endif
- (BOOL) valuesIsSet;

@end

@interface ReferenceData : NSObject <TBase, NSCoding> {
  NSMutableArray * __authLocations;
  NSMutableArray * __allSources;

  BOOL __authLocations_isset;
  BOOL __allSources_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=authLocations, setter=setAuthLocations:) NSMutableArray * authLocations;
@property (nonatomic, retain, getter=allSources, setter=setAllSources:) NSMutableArray * allSources;
#endif

- (id) init;
- (id) initWithAuthLocations: (NSMutableArray *) authLocations allSources: (NSMutableArray *) allSources;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSMutableArray *) authLocations;
- (void) setAuthLocations: (NSMutableArray *) authLocations;
#endif
- (BOOL) authLocationsIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) allSources;
- (void) setAllSources: (NSMutableArray *) allSources;
#endif
- (BOOL) allSourcesIsSet;

@end

@interface PostUser : NSObject <TBase, NSCoding> {
  NSString * __id;
  NSString * __locationName;
  NSString * __userName;
  NSString * __displayName;
  NSString * __location;
  NSString * __photoUrl;
  NSString * __profileUrl;

  BOOL __id_isset;
  BOOL __locationName_isset;
  BOOL __userName_isset;
  BOOL __displayName_isset;
  BOOL __location_isset;
  BOOL __photoUrl_isset;
  BOOL __profileUrl_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) NSString * id;
@property (nonatomic, retain, getter=locationName, setter=setLocationName:) NSString * locationName;
@property (nonatomic, retain, getter=userName, setter=setUserName:) NSString * userName;
@property (nonatomic, retain, getter=displayName, setter=setDisplayName:) NSString * displayName;
@property (nonatomic, retain, getter=location, setter=setLocation:) NSString * location;
@property (nonatomic, retain, getter=photoUrl, setter=setPhotoUrl:) NSString * photoUrl;
@property (nonatomic, retain, getter=profileUrl, setter=setProfileUrl:) NSString * profileUrl;
#endif

- (id) init;
- (id) initWithId: (NSString *) id locationName: (NSString *) locationName userName: (NSString *) userName displayName: (NSString *) displayName location: (NSString *) location photoUrl: (NSString *) photoUrl profileUrl: (NSString *) profileUrl;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) id;
- (void) setId: (NSString *) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) locationName;
- (void) setLocationName: (NSString *) locationName;
#endif
- (BOOL) locationNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) userName;
- (void) setUserName: (NSString *) userName;
#endif
- (BOOL) userNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) displayName;
- (void) setDisplayName: (NSString *) displayName;
#endif
- (BOOL) displayNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) location;
- (void) setLocation: (NSString *) location;
#endif
- (BOOL) locationIsSet;

#if !__has_feature(objc_arc)
- (NSString *) photoUrl;
- (void) setPhotoUrl: (NSString *) photoUrl;
#endif
- (BOOL) photoUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) profileUrl;
- (void) setProfileUrl: (NSString *) profileUrl;
#endif
- (BOOL) profileUrlIsSet;

@end

@interface Reply : NSObject <TBase, NSCoding> {
  NSString * __id;
  NSString * __parentID;
  NSString * __externalID;
  NSString * __source;
  NSString * __url;
  PostUser * __user;
  NSString * __text;
  NSMutableDictionary * __properties;
  int64_t __created;
  int64_t __updated;
  BOOL __upvoted;
  BOOL __deletable;
  NSMutableArray * __allowedActions;
  NSString * __createdDtPrettyShort;
  NSString * __createdDtPrettyLong;

  BOOL __id_isset;
  BOOL __parentID_isset;
  BOOL __externalID_isset;
  BOOL __source_isset;
  BOOL __url_isset;
  BOOL __user_isset;
  BOOL __text_isset;
  BOOL __properties_isset;
  BOOL __created_isset;
  BOOL __updated_isset;
  BOOL __upvoted_isset;
  BOOL __deletable_isset;
  BOOL __allowedActions_isset;
  BOOL __createdDtPrettyShort_isset;
  BOOL __createdDtPrettyLong_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) NSString * id;
@property (nonatomic, retain, getter=parentID, setter=setParentID:) NSString * parentID;
@property (nonatomic, retain, getter=externalID, setter=setExternalID:) NSString * externalID;
@property (nonatomic, retain, getter=source, setter=setSource:) NSString * source;
@property (nonatomic, retain, getter=url, setter=setUrl:) NSString * url;
@property (nonatomic, retain, getter=user, setter=setUser:) PostUser * user;
@property (nonatomic, retain, getter=text, setter=setText:) NSString * text;
@property (nonatomic, retain, getter=properties, setter=setProperties:) NSMutableDictionary * properties;
@property (nonatomic, getter=created, setter=setCreated:) int64_t created;
@property (nonatomic, getter=updated, setter=setUpdated:) int64_t updated;
@property (nonatomic, getter=upvoted, setter=setUpvoted:) BOOL upvoted;
@property (nonatomic, getter=deletable, setter=setDeletable:) BOOL deletable;
@property (nonatomic, retain, getter=allowedActions, setter=setAllowedActions:) NSMutableArray * allowedActions;
@property (nonatomic, retain, getter=createdDtPrettyShort, setter=setCreatedDtPrettyShort:) NSString * createdDtPrettyShort;
@property (nonatomic, retain, getter=createdDtPrettyLong, setter=setCreatedDtPrettyLong:) NSString * createdDtPrettyLong;
#endif

- (id) init;
- (id) initWithId: (NSString *) id parentID: (NSString *) parentID externalID: (NSString *) externalID source: (NSString *) source url: (NSString *) url user: (PostUser *) user text: (NSString *) text properties: (NSMutableDictionary *) properties created: (int64_t) created updated: (int64_t) updated upvoted: (BOOL) upvoted deletable: (BOOL) deletable allowedActions: (NSMutableArray *) allowedActions createdDtPrettyShort: (NSString *) createdDtPrettyShort createdDtPrettyLong: (NSString *) createdDtPrettyLong;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) id;
- (void) setId: (NSString *) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) parentID;
- (void) setParentID: (NSString *) parentID;
#endif
- (BOOL) parentIDIsSet;

#if !__has_feature(objc_arc)
- (NSString *) externalID;
- (void) setExternalID: (NSString *) externalID;
#endif
- (BOOL) externalIDIsSet;

#if !__has_feature(objc_arc)
- (NSString *) source;
- (void) setSource: (NSString *) source;
#endif
- (BOOL) sourceIsSet;

#if !__has_feature(objc_arc)
- (NSString *) url;
- (void) setUrl: (NSString *) url;
#endif
- (BOOL) urlIsSet;

#if !__has_feature(objc_arc)
- (PostUser *) user;
- (void) setUser: (PostUser *) user;
#endif
- (BOOL) userIsSet;

#if !__has_feature(objc_arc)
- (NSString *) text;
- (void) setText: (NSString *) text;
#endif
- (BOOL) textIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) properties;
- (void) setProperties: (NSMutableDictionary *) properties;
#endif
- (BOOL) propertiesIsSet;

#if !__has_feature(objc_arc)
- (int64_t) created;
- (void) setCreated: (int64_t) created;
#endif
- (BOOL) createdIsSet;

#if !__has_feature(objc_arc)
- (int64_t) updated;
- (void) setUpdated: (int64_t) updated;
#endif
- (BOOL) updatedIsSet;

#if !__has_feature(objc_arc)
- (BOOL) upvoted;
- (void) setUpvoted: (BOOL) upvoted;
#endif
- (BOOL) upvotedIsSet;

#if !__has_feature(objc_arc)
- (BOOL) deletable;
- (void) setDeletable: (BOOL) deletable;
#endif
- (BOOL) deletableIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) allowedActions;
- (void) setAllowedActions: (NSMutableArray *) allowedActions;
#endif
- (BOOL) allowedActionsIsSet;

#if !__has_feature(objc_arc)
- (NSString *) createdDtPrettyShort;
- (void) setCreatedDtPrettyShort: (NSString *) createdDtPrettyShort;
#endif
- (BOOL) createdDtPrettyShortIsSet;

#if !__has_feature(objc_arc)
- (NSString *) createdDtPrettyLong;
- (void) setCreatedDtPrettyLong: (NSString *) createdDtPrettyLong;
#endif
- (BOOL) createdDtPrettyLongIsSet;

@end

@interface Media : NSObject <TBase, NSCoding> {
  NSString * __id;
  int __type;
  NSString * __photoUrl;
  NSString * __expandedUrl;
  NSString * __displayUrl;
  int32_t __offset;
  int32_t __length;
  NSMutableDictionary * __properties;

  BOOL __id_isset;
  BOOL __type_isset;
  BOOL __photoUrl_isset;
  BOOL __expandedUrl_isset;
  BOOL __displayUrl_isset;
  BOOL __offset_isset;
  BOOL __length_isset;
  BOOL __properties_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) NSString * id;
@property (nonatomic, getter=type, setter=setType:) int type;
@property (nonatomic, retain, getter=photoUrl, setter=setPhotoUrl:) NSString * photoUrl;
@property (nonatomic, retain, getter=expandedUrl, setter=setExpandedUrl:) NSString * expandedUrl;
@property (nonatomic, retain, getter=displayUrl, setter=setDisplayUrl:) NSString * displayUrl;
@property (nonatomic, getter=offset, setter=setOffset:) int32_t offset;
@property (nonatomic, getter=length, setter=setLength:) int32_t length;
@property (nonatomic, retain, getter=properties, setter=setProperties:) NSMutableDictionary * properties;
#endif

- (id) init;
- (id) initWithId: (NSString *) id type: (int) type photoUrl: (NSString *) photoUrl expandedUrl: (NSString *) expandedUrl displayUrl: (NSString *) displayUrl offset: (int32_t) offset length: (int32_t) length properties: (NSMutableDictionary *) properties;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) id;
- (void) setId: (NSString *) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (int) type;
- (void) setType: (int) type;
#endif
- (BOOL) typeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) photoUrl;
- (void) setPhotoUrl: (NSString *) photoUrl;
#endif
- (BOOL) photoUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) expandedUrl;
- (void) setExpandedUrl: (NSString *) expandedUrl;
#endif
- (BOOL) expandedUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) displayUrl;
- (void) setDisplayUrl: (NSString *) displayUrl;
#endif
- (BOOL) displayUrlIsSet;

#if !__has_feature(objc_arc)
- (int32_t) offset;
- (void) setOffset: (int32_t) offset;
#endif
- (BOOL) offsetIsSet;

#if !__has_feature(objc_arc)
- (int32_t) length;
- (void) setLength: (int32_t) length;
#endif
- (BOOL) lengthIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) properties;
- (void) setProperties: (NSMutableDictionary *) properties;
#endif
- (BOOL) propertiesIsSet;

@end

@interface SocialTag : NSObject <TBase, NSCoding> {
  NSString * __id;
  int32_t __offset;
  int32_t __length;
  NSString * __expandedUrl;

  BOOL __id_isset;
  BOOL __offset_isset;
  BOOL __length_isset;
  BOOL __expandedUrl_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) NSString * id;
@property (nonatomic, getter=offset, setter=setOffset:) int32_t offset;
@property (nonatomic, getter=length, setter=setLength:) int32_t length;
@property (nonatomic, retain, getter=expandedUrl, setter=setExpandedUrl:) NSString * expandedUrl;
#endif

- (id) init;
- (id) initWithId: (NSString *) id offset: (int32_t) offset length: (int32_t) length expandedUrl: (NSString *) expandedUrl;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) id;
- (void) setId: (NSString *) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (int32_t) offset;
- (void) setOffset: (int32_t) offset;
#endif
- (BOOL) offsetIsSet;

#if !__has_feature(objc_arc)
- (int32_t) length;
- (void) setLength: (int32_t) length;
#endif
- (BOOL) lengthIsSet;

#if !__has_feature(objc_arc)
- (NSString *) expandedUrl;
- (void) setExpandedUrl: (NSString *) expandedUrl;
#endif
- (BOOL) expandedUrlIsSet;

@end

@interface Hashtag : NSObject <TBase, NSCoding> {
  NSString * __text;
  int32_t __offset;
  int32_t __length;
  NSString * __expandedUrl;

  BOOL __text_isset;
  BOOL __offset_isset;
  BOOL __length_isset;
  BOOL __expandedUrl_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=text, setter=setText:) NSString * text;
@property (nonatomic, getter=offset, setter=setOffset:) int32_t offset;
@property (nonatomic, getter=length, setter=setLength:) int32_t length;
@property (nonatomic, retain, getter=expandedUrl, setter=setExpandedUrl:) NSString * expandedUrl;
#endif

- (id) init;
- (id) initWithText: (NSString *) text offset: (int32_t) offset length: (int32_t) length expandedUrl: (NSString *) expandedUrl;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) text;
- (void) setText: (NSString *) text;
#endif
- (BOOL) textIsSet;

#if !__has_feature(objc_arc)
- (int32_t) offset;
- (void) setOffset: (int32_t) offset;
#endif
- (BOOL) offsetIsSet;

#if !__has_feature(objc_arc)
- (int32_t) length;
- (void) setLength: (int32_t) length;
#endif
- (BOOL) lengthIsSet;

#if !__has_feature(objc_arc)
- (NSString *) expandedUrl;
- (void) setExpandedUrl: (NSString *) expandedUrl;
#endif
- (BOOL) expandedUrlIsSet;

@end

@interface MonitorLink : NSObject <TBase, NSCoding> {
  NSString * __photoUrl;
  NSString * __expandedUrl;
  NSString * __displayUrl;
  NSString * __name;
  NSString * __caption;
  NSString * __linkDescription;
  int32_t __offset;
  int32_t __length;

  BOOL __photoUrl_isset;
  BOOL __expandedUrl_isset;
  BOOL __displayUrl_isset;
  BOOL __name_isset;
  BOOL __caption_isset;
  BOOL __linkDescription_isset;
  BOOL __offset_isset;
  BOOL __length_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=photoUrl, setter=setPhotoUrl:) NSString * photoUrl;
@property (nonatomic, retain, getter=expandedUrl, setter=setExpandedUrl:) NSString * expandedUrl;
@property (nonatomic, retain, getter=displayUrl, setter=setDisplayUrl:) NSString * displayUrl;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=caption, setter=setCaption:) NSString * caption;
@property (nonatomic, retain, getter=linkDescription, setter=setLinkDescription:) NSString * linkDescription;
@property (nonatomic, getter=offset, setter=setOffset:) int32_t offset;
@property (nonatomic, getter=length, setter=setLength:) int32_t length;
#endif

- (id) init;
- (id) initWithPhotoUrl: (NSString *) photoUrl expandedUrl: (NSString *) expandedUrl displayUrl: (NSString *) displayUrl name: (NSString *) name caption: (NSString *) caption linkDescription: (NSString *) linkDescription offset: (int32_t) offset length: (int32_t) length;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) photoUrl;
- (void) setPhotoUrl: (NSString *) photoUrl;
#endif
- (BOOL) photoUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) expandedUrl;
- (void) setExpandedUrl: (NSString *) expandedUrl;
#endif
- (BOOL) expandedUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) displayUrl;
- (void) setDisplayUrl: (NSString *) displayUrl;
#endif
- (BOOL) displayUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) caption;
- (void) setCaption: (NSString *) caption;
#endif
- (BOOL) captionIsSet;

#if !__has_feature(objc_arc)
- (NSString *) linkDescription;
- (void) setLinkDescription: (NSString *) linkDescription;
#endif
- (BOOL) linkDescriptionIsSet;

#if !__has_feature(objc_arc)
- (int32_t) offset;
- (void) setOffset: (int32_t) offset;
#endif
- (BOOL) offsetIsSet;

#if !__has_feature(objc_arc)
- (int32_t) length;
- (void) setLength: (int32_t) length;
#endif
- (BOOL) lengthIsSet;

@end

@interface MonitorPost : NSObject <TBase, NSCoding> {
  NSString * __id;
  NSString * __externalID;
  NSString * __sourceId;
  NSString * __postUrl;
  PostUser * __user;
  NSString * __text;
  NSMutableArray * __links;
  NSMutableArray * __medias;
  NSMutableArray * __tags;
  NSMutableArray * __hashtags;
  NSMutableDictionary * __properties;
  int64_t __created;
  int64_t __updated;
  int64_t __latestReplyTime;
  int32_t __numReplies;
  int32_t __numRepliesFromSelf;
  BOOL __flagged;
  BOOL __readFlag;
  BOOL __upvoted;
  BOOL __deletable;
  NSString * __sourceName;
  NSString * __sourceSmallIconPath;
  NSString * __sourceLargeIconPath;
  NSMutableArray * __replies;
  NSMutableArray * __allowedActions;
  NSString * __createdDtPrettyShort;
  NSString * __createdDtPrettyLong;

  BOOL __id_isset;
  BOOL __externalID_isset;
  BOOL __sourceId_isset;
  BOOL __postUrl_isset;
  BOOL __user_isset;
  BOOL __text_isset;
  BOOL __links_isset;
  BOOL __medias_isset;
  BOOL __tags_isset;
  BOOL __hashtags_isset;
  BOOL __properties_isset;
  BOOL __created_isset;
  BOOL __updated_isset;
  BOOL __latestReplyTime_isset;
  BOOL __numReplies_isset;
  BOOL __numRepliesFromSelf_isset;
  BOOL __flagged_isset;
  BOOL __readFlag_isset;
  BOOL __upvoted_isset;
  BOOL __deletable_isset;
  BOOL __sourceName_isset;
  BOOL __sourceSmallIconPath_isset;
  BOOL __sourceLargeIconPath_isset;
  BOOL __replies_isset;
  BOOL __allowedActions_isset;
  BOOL __createdDtPrettyShort_isset;
  BOOL __createdDtPrettyLong_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) NSString * id;
@property (nonatomic, retain, getter=externalID, setter=setExternalID:) NSString * externalID;
@property (nonatomic, retain, getter=sourceId, setter=setSourceId:) NSString * sourceId;
@property (nonatomic, retain, getter=postUrl, setter=setPostUrl:) NSString * postUrl;
@property (nonatomic, retain, getter=user, setter=setUser:) PostUser * user;
@property (nonatomic, retain, getter=text, setter=setText:) NSString * text;
@property (nonatomic, retain, getter=links, setter=setLinks:) NSMutableArray * links;
@property (nonatomic, retain, getter=medias, setter=setMedias:) NSMutableArray * medias;
@property (nonatomic, retain, getter=tags, setter=setTags:) NSMutableArray * tags;
@property (nonatomic, retain, getter=hashtags, setter=setHashtags:) NSMutableArray * hashtags;
@property (nonatomic, retain, getter=properties, setter=setProperties:) NSMutableDictionary * properties;
@property (nonatomic, getter=created, setter=setCreated:) int64_t created;
@property (nonatomic, getter=updated, setter=setUpdated:) int64_t updated;
@property (nonatomic, getter=latestReplyTime, setter=setLatestReplyTime:) int64_t latestReplyTime;
@property (nonatomic, getter=numReplies, setter=setNumReplies:) int32_t numReplies;
@property (nonatomic, getter=numRepliesFromSelf, setter=setNumRepliesFromSelf:) int32_t numRepliesFromSelf;
@property (nonatomic, getter=flagged, setter=setFlagged:) BOOL flagged;
@property (nonatomic, getter=readFlag, setter=setReadFlag:) BOOL readFlag;
@property (nonatomic, getter=upvoted, setter=setUpvoted:) BOOL upvoted;
@property (nonatomic, getter=deletable, setter=setDeletable:) BOOL deletable;
@property (nonatomic, retain, getter=sourceName, setter=setSourceName:) NSString * sourceName;
@property (nonatomic, retain, getter=sourceSmallIconPath, setter=setSourceSmallIconPath:) NSString * sourceSmallIconPath;
@property (nonatomic, retain, getter=sourceLargeIconPath, setter=setSourceLargeIconPath:) NSString * sourceLargeIconPath;
@property (nonatomic, retain, getter=replies, setter=setReplies:) NSMutableArray * replies;
@property (nonatomic, retain, getter=allowedActions, setter=setAllowedActions:) NSMutableArray * allowedActions;
@property (nonatomic, retain, getter=createdDtPrettyShort, setter=setCreatedDtPrettyShort:) NSString * createdDtPrettyShort;
@property (nonatomic, retain, getter=createdDtPrettyLong, setter=setCreatedDtPrettyLong:) NSString * createdDtPrettyLong;
#endif

- (id) init;
- (id) initWithId: (NSString *) id externalID: (NSString *) externalID sourceId: (NSString *) sourceId postUrl: (NSString *) postUrl user: (PostUser *) user text: (NSString *) text links: (NSMutableArray *) links medias: (NSMutableArray *) medias tags: (NSMutableArray *) tags hashtags: (NSMutableArray *) hashtags properties: (NSMutableDictionary *) properties created: (int64_t) created updated: (int64_t) updated latestReplyTime: (int64_t) latestReplyTime numReplies: (int32_t) numReplies numRepliesFromSelf: (int32_t) numRepliesFromSelf flagged: (BOOL) flagged readFlag: (BOOL) readFlag upvoted: (BOOL) upvoted deletable: (BOOL) deletable sourceName: (NSString *) sourceName sourceSmallIconPath: (NSString *) sourceSmallIconPath sourceLargeIconPath: (NSString *) sourceLargeIconPath replies: (NSMutableArray *) replies allowedActions: (NSMutableArray *) allowedActions createdDtPrettyShort: (NSString *) createdDtPrettyShort createdDtPrettyLong: (NSString *) createdDtPrettyLong;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) id;
- (void) setId: (NSString *) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) externalID;
- (void) setExternalID: (NSString *) externalID;
#endif
- (BOOL) externalIDIsSet;

#if !__has_feature(objc_arc)
- (NSString *) sourceId;
- (void) setSourceId: (NSString *) sourceId;
#endif
- (BOOL) sourceIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) postUrl;
- (void) setPostUrl: (NSString *) postUrl;
#endif
- (BOOL) postUrlIsSet;

#if !__has_feature(objc_arc)
- (PostUser *) user;
- (void) setUser: (PostUser *) user;
#endif
- (BOOL) userIsSet;

#if !__has_feature(objc_arc)
- (NSString *) text;
- (void) setText: (NSString *) text;
#endif
- (BOOL) textIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) links;
- (void) setLinks: (NSMutableArray *) links;
#endif
- (BOOL) linksIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) medias;
- (void) setMedias: (NSMutableArray *) medias;
#endif
- (BOOL) mediasIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) tags;
- (void) setTags: (NSMutableArray *) tags;
#endif
- (BOOL) tagsIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) hashtags;
- (void) setHashtags: (NSMutableArray *) hashtags;
#endif
- (BOOL) hashtagsIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) properties;
- (void) setProperties: (NSMutableDictionary *) properties;
#endif
- (BOOL) propertiesIsSet;

#if !__has_feature(objc_arc)
- (int64_t) created;
- (void) setCreated: (int64_t) created;
#endif
- (BOOL) createdIsSet;

#if !__has_feature(objc_arc)
- (int64_t) updated;
- (void) setUpdated: (int64_t) updated;
#endif
- (BOOL) updatedIsSet;

#if !__has_feature(objc_arc)
- (int64_t) latestReplyTime;
- (void) setLatestReplyTime: (int64_t) latestReplyTime;
#endif
- (BOOL) latestReplyTimeIsSet;

#if !__has_feature(objc_arc)
- (int32_t) numReplies;
- (void) setNumReplies: (int32_t) numReplies;
#endif
- (BOOL) numRepliesIsSet;

#if !__has_feature(objc_arc)
- (int32_t) numRepliesFromSelf;
- (void) setNumRepliesFromSelf: (int32_t) numRepliesFromSelf;
#endif
- (BOOL) numRepliesFromSelfIsSet;

#if !__has_feature(objc_arc)
- (BOOL) flagged;
- (void) setFlagged: (BOOL) flagged;
#endif
- (BOOL) flaggedIsSet;

#if !__has_feature(objc_arc)
- (BOOL) readFlag;
- (void) setReadFlag: (BOOL) readFlag;
#endif
- (BOOL) readFlagIsSet;

#if !__has_feature(objc_arc)
- (BOOL) upvoted;
- (void) setUpvoted: (BOOL) upvoted;
#endif
- (BOOL) upvotedIsSet;

#if !__has_feature(objc_arc)
- (BOOL) deletable;
- (void) setDeletable: (BOOL) deletable;
#endif
- (BOOL) deletableIsSet;

#if !__has_feature(objc_arc)
- (NSString *) sourceName;
- (void) setSourceName: (NSString *) sourceName;
#endif
- (BOOL) sourceNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) sourceSmallIconPath;
- (void) setSourceSmallIconPath: (NSString *) sourceSmallIconPath;
#endif
- (BOOL) sourceSmallIconPathIsSet;

#if !__has_feature(objc_arc)
- (NSString *) sourceLargeIconPath;
- (void) setSourceLargeIconPath: (NSString *) sourceLargeIconPath;
#endif
- (BOOL) sourceLargeIconPathIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) replies;
- (void) setReplies: (NSMutableArray *) replies;
#endif
- (BOOL) repliesIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) allowedActions;
- (void) setAllowedActions: (NSMutableArray *) allowedActions;
#endif
- (BOOL) allowedActionsIsSet;

#if !__has_feature(objc_arc)
- (NSString *) createdDtPrettyShort;
- (void) setCreatedDtPrettyShort: (NSString *) createdDtPrettyShort;
#endif
- (BOOL) createdDtPrettyShortIsSet;

#if !__has_feature(objc_arc)
- (NSString *) createdDtPrettyLong;
- (void) setCreatedDtPrettyLong: (NSString *) createdDtPrettyLong;
#endif
- (BOOL) createdDtPrettyLongIsSet;

@end

@interface MediaData : NSObject <TBase, NSCoding> {
  NSData * __data;
  int32_t __size;
  NSString * __bodyHash;
  int __mimeType;
  NSMutableDictionary * __imageMetaData;
  NSString * __url;

  BOOL __data_isset;
  BOOL __size_isset;
  BOOL __bodyHash_isset;
  BOOL __mimeType_isset;
  BOOL __imageMetaData_isset;
  BOOL __url_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=data, setter=setData:) NSData * data;
@property (nonatomic, getter=size, setter=setSize:) int32_t size;
@property (nonatomic, retain, getter=bodyHash, setter=setBodyHash:) NSString * bodyHash;
@property (nonatomic, getter=mimeType, setter=setMimeType:) int mimeType;
@property (nonatomic, retain, getter=imageMetaData, setter=setImageMetaData:) NSMutableDictionary * imageMetaData;
@property (nonatomic, retain, getter=url, setter=setUrl:) NSString * url;
#endif

- (id) init;
- (id) initWithData: (NSData *) data size: (int32_t) size bodyHash: (NSString *) bodyHash mimeType: (int) mimeType imageMetaData: (NSMutableDictionary *) imageMetaData url: (NSString *) url;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSData *) data;
- (void) setData: (NSData *) data;
#endif
- (BOOL) dataIsSet;

#if !__has_feature(objc_arc)
- (int32_t) size;
- (void) setSize: (int32_t) size;
#endif
- (BOOL) sizeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) bodyHash;
- (void) setBodyHash: (NSString *) bodyHash;
#endif
- (BOOL) bodyHashIsSet;

#if !__has_feature(objc_arc)
- (int) mimeType;
- (void) setMimeType: (int) mimeType;
#endif
- (BOOL) mimeTypeIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) imageMetaData;
- (void) setImageMetaData: (NSMutableDictionary *) imageMetaData;
#endif
- (BOOL) imageMetaDataIsSet;

#if !__has_feature(objc_arc)
- (NSString *) url;
- (void) setUrl: (NSString *) url;
#endif
- (BOOL) urlIsSet;

@end

@interface PublishLink : NSObject <TBase, NSCoding> {
  NSString * __url;
  NSString * __name;
  NSString * __caption;
  NSString * __linkDescription;

  BOOL __url_isset;
  BOOL __name_isset;
  BOOL __caption_isset;
  BOOL __linkDescription_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=url, setter=setUrl:) NSString * url;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=caption, setter=setCaption:) NSString * caption;
@property (nonatomic, retain, getter=linkDescription, setter=setLinkDescription:) NSString * linkDescription;
#endif

- (id) init;
- (id) initWithUrl: (NSString *) url name: (NSString *) name caption: (NSString *) caption linkDescription: (NSString *) linkDescription;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) url;
- (void) setUrl: (NSString *) url;
#endif
- (BOOL) urlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) caption;
- (void) setCaption: (NSString *) caption;
#endif
- (BOOL) captionIsSet;

#if !__has_feature(objc_arc)
- (NSString *) linkDescription;
- (void) setLinkDescription: (NSString *) linkDescription;
#endif
- (BOOL) linkDescriptionIsSet;

@end

@interface ScheduledPost : NSObject <TBase, NSCoding> {
  NSString * __id;
  int64_t __tenantID;
  int32_t __userID;
  NSMutableDictionary * __sources;
  int32_t __locationCount;
  NSMutableDictionary * __locations;
  int64_t __scheduleDate;
  NSString * __text;
  PublishLink * __link;
  NSString * __mediaPath;
  int __postState;
  NSMutableArray * __allowedActions;
  NSString * __taskTitle;
  NSString * __taskIconUrl;
  NSString * __scheduleDateStr;
  NSString * __scheduleDateStrLong;
  NSString * __createDateStr;
  NSString * __createDateStrLong;

  BOOL __id_isset;
  BOOL __tenantID_isset;
  BOOL __userID_isset;
  BOOL __sources_isset;
  BOOL __locationCount_isset;
  BOOL __locations_isset;
  BOOL __scheduleDate_isset;
  BOOL __text_isset;
  BOOL __link_isset;
  BOOL __mediaPath_isset;
  BOOL __postState_isset;
  BOOL __allowedActions_isset;
  BOOL __taskTitle_isset;
  BOOL __taskIconUrl_isset;
  BOOL __scheduleDateStr_isset;
  BOOL __scheduleDateStrLong_isset;
  BOOL __createDateStr_isset;
  BOOL __createDateStrLong_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) NSString * id;
@property (nonatomic, getter=tenantID, setter=setTenantID:) int64_t tenantID;
@property (nonatomic, getter=userID, setter=setUserID:) int32_t userID;
@property (nonatomic, retain, getter=sources, setter=setSources:) NSMutableDictionary * sources;
@property (nonatomic, getter=locationCount, setter=setLocationCount:) int32_t locationCount;
@property (nonatomic, retain, getter=locations, setter=setLocations:) NSMutableDictionary * locations;
@property (nonatomic, getter=scheduleDate, setter=setScheduleDate:) int64_t scheduleDate;
@property (nonatomic, retain, getter=text, setter=setText:) NSString * text;
@property (nonatomic, retain, getter=link, setter=setLink:) PublishLink * link;
@property (nonatomic, retain, getter=mediaPath, setter=setMediaPath:) NSString * mediaPath;
@property (nonatomic, getter=postState, setter=setPostState:) int postState;
@property (nonatomic, retain, getter=allowedActions, setter=setAllowedActions:) NSMutableArray * allowedActions;
@property (nonatomic, retain, getter=taskTitle, setter=setTaskTitle:) NSString * taskTitle;
@property (nonatomic, retain, getter=taskIconUrl, setter=setTaskIconUrl:) NSString * taskIconUrl;
@property (nonatomic, retain, getter=scheduleDateStr, setter=setScheduleDateStr:) NSString * scheduleDateStr;
@property (nonatomic, retain, getter=scheduleDateStrLong, setter=setScheduleDateStrLong:) NSString * scheduleDateStrLong;
@property (nonatomic, retain, getter=createDateStr, setter=setCreateDateStr:) NSString * createDateStr;
@property (nonatomic, retain, getter=createDateStrLong, setter=setCreateDateStrLong:) NSString * createDateStrLong;
#endif

- (id) init;
- (id) initWithId: (NSString *) id tenantID: (int64_t) tenantID userID: (int32_t) userID sources: (NSMutableDictionary *) sources locationCount: (int32_t) locationCount locations: (NSMutableDictionary *) locations scheduleDate: (int64_t) scheduleDate text: (NSString *) text link: (PublishLink *) link mediaPath: (NSString *) mediaPath postState: (int) postState allowedActions: (NSMutableArray *) allowedActions taskTitle: (NSString *) taskTitle taskIconUrl: (NSString *) taskIconUrl scheduleDateStr: (NSString *) scheduleDateStr scheduleDateStrLong: (NSString *) scheduleDateStrLong createDateStr: (NSString *) createDateStr createDateStrLong: (NSString *) createDateStrLong;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) id;
- (void) setId: (NSString *) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (int64_t) tenantID;
- (void) setTenantID: (int64_t) tenantID;
#endif
- (BOOL) tenantIDIsSet;

#if !__has_feature(objc_arc)
- (int32_t) userID;
- (void) setUserID: (int32_t) userID;
#endif
- (BOOL) userIDIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) sources;
- (void) setSources: (NSMutableDictionary *) sources;
#endif
- (BOOL) sourcesIsSet;

#if !__has_feature(objc_arc)
- (int32_t) locationCount;
- (void) setLocationCount: (int32_t) locationCount;
#endif
- (BOOL) locationCountIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) locations;
- (void) setLocations: (NSMutableDictionary *) locations;
#endif
- (BOOL) locationsIsSet;

#if !__has_feature(objc_arc)
- (int64_t) scheduleDate;
- (void) setScheduleDate: (int64_t) scheduleDate;
#endif
- (BOOL) scheduleDateIsSet;

#if !__has_feature(objc_arc)
- (NSString *) text;
- (void) setText: (NSString *) text;
#endif
- (BOOL) textIsSet;

#if !__has_feature(objc_arc)
- (PublishLink *) link;
- (void) setLink: (PublishLink *) link;
#endif
- (BOOL) linkIsSet;

#if !__has_feature(objc_arc)
- (NSString *) mediaPath;
- (void) setMediaPath: (NSString *) mediaPath;
#endif
- (BOOL) mediaPathIsSet;

#if !__has_feature(objc_arc)
- (int) postState;
- (void) setPostState: (int) postState;
#endif
- (BOOL) postStateIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) allowedActions;
- (void) setAllowedActions: (NSMutableArray *) allowedActions;
#endif
- (BOOL) allowedActionsIsSet;

#if !__has_feature(objc_arc)
- (NSString *) taskTitle;
- (void) setTaskTitle: (NSString *) taskTitle;
#endif
- (BOOL) taskTitleIsSet;

#if !__has_feature(objc_arc)
- (NSString *) taskIconUrl;
- (void) setTaskIconUrl: (NSString *) taskIconUrl;
#endif
- (BOOL) taskIconUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) scheduleDateStr;
- (void) setScheduleDateStr: (NSString *) scheduleDateStr;
#endif
- (BOOL) scheduleDateStrIsSet;

#if !__has_feature(objc_arc)
- (NSString *) scheduleDateStrLong;
- (void) setScheduleDateStrLong: (NSString *) scheduleDateStrLong;
#endif
- (BOOL) scheduleDateStrLongIsSet;

#if !__has_feature(objc_arc)
- (NSString *) createDateStr;
- (void) setCreateDateStr: (NSString *) createDateStr;
#endif
- (BOOL) createDateStrIsSet;

#if !__has_feature(objc_arc)
- (NSString *) createDateStrLong;
- (void) setCreateDateStrLong: (NSString *) createDateStrLong;
#endif
- (BOOL) createDateStrLongIsSet;

@end

@interface SocialPostRequest : NSObject <TBase, NSCoding> {
  NSMutableArray * __socialSources;
  NSString * __text;
  NSMutableArray * __images;
  NSMutableArray * __locations;
  int64_t __postDate;

  BOOL __socialSources_isset;
  BOOL __text_isset;
  BOOL __images_isset;
  BOOL __locations_isset;
  BOOL __postDate_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=socialSources, setter=setSocialSources:) NSMutableArray * socialSources;
@property (nonatomic, retain, getter=text, setter=setText:) NSString * text;
@property (nonatomic, retain, getter=images, setter=setImages:) NSMutableArray * images;
@property (nonatomic, retain, getter=locations, setter=setLocations:) NSMutableArray * locations;
@property (nonatomic, getter=postDate, setter=setPostDate:) int64_t postDate;
#endif

- (id) init;
- (id) initWithSocialSources: (NSMutableArray *) socialSources text: (NSString *) text images: (NSMutableArray *) images locations: (NSMutableArray *) locations postDate: (int64_t) postDate;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSMutableArray *) socialSources;
- (void) setSocialSources: (NSMutableArray *) socialSources;
#endif
- (BOOL) socialSourcesIsSet;

#if !__has_feature(objc_arc)
- (NSString *) text;
- (void) setText: (NSString *) text;
#endif
- (BOOL) textIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) images;
- (void) setImages: (NSMutableArray *) images;
#endif
- (BOOL) imagesIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) locations;
- (void) setLocations: (NSMutableArray *) locations;
#endif
- (BOOL) locationsIsSet;

#if !__has_feature(objc_arc)
- (int64_t) postDate;
- (void) setPostDate: (int64_t) postDate;
#endif
- (BOOL) postDateIsSet;

@end

@interface SocialPostResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  MonitorPost * __socialPost;

  BOOL __response_isset;
  BOOL __socialPost_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, retain, getter=socialPost, setter=setSocialPost:) MonitorPost * socialPost;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response socialPost: (MonitorPost *) socialPost;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (MonitorPost *) socialPost;
- (void) setSocialPost: (MonitorPost *) socialPost;
#endif
- (BOOL) socialPostIsSet;

@end

@interface FeedResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  int64_t __itemsCount;
  NSMutableArray * __items;

  BOOL __response_isset;
  BOOL __itemsCount_isset;
  BOOL __items_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, getter=itemsCount, setter=setItemsCount:) int64_t itemsCount;
@property (nonatomic, retain, getter=items, setter=setItems:) NSMutableArray * items;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response itemsCount: (int64_t) itemsCount items: (NSMutableArray *) items;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (int64_t) itemsCount;
- (void) setItemsCount: (int64_t) itemsCount;
#endif
- (BOOL) itemsCountIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) items;
- (void) setItems: (NSMutableArray *) items;
#endif
- (BOOL) itemsIsSet;

@end

@interface GetRatingResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  Review * __review;

  BOOL __response_isset;
  BOOL __review_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, retain, getter=review, setter=setReview:) Review * review;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response review: (Review *) review;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (Review *) review;
- (void) setReview: (Review *) review;
#endif
- (BOOL) reviewIsSet;

@end

@interface PermissionsResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  UserConfig * __config;

  BOOL __response_isset;
  BOOL __config_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, retain, getter=config, setter=setConfig:) UserConfig * config;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response config: (UserConfig *) config;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (UserConfig *) config;
- (void) setConfig: (UserConfig *) config;
#endif
- (BOOL) configIsSet;

@end

@interface SaveSettingsResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  NSMutableArray * __userSettings;

  BOOL __response_isset;
  BOOL __userSettings_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, retain, getter=userSettings, setter=setUserSettings:) NSMutableArray * userSettings;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response userSettings: (NSMutableArray *) userSettings;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) userSettings;
- (void) setUserSettings: (NSMutableArray *) userSettings;
#endif
- (BOOL) userSettingsIsSet;

@end

@interface ReferenceDataResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  ReferenceData * __cachedData;
  int64_t __ttl;

  BOOL __response_isset;
  BOOL __cachedData_isset;
  BOOL __ttl_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, retain, getter=cachedData, setter=setCachedData:) ReferenceData * cachedData;
@property (nonatomic, getter=ttl, setter=setTtl:) int64_t ttl;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response cachedData: (ReferenceData *) cachedData ttl: (int64_t) ttl;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (ReferenceData *) cachedData;
- (void) setCachedData: (ReferenceData *) cachedData;
#endif
- (BOOL) cachedDataIsSet;

#if !__has_feature(objc_arc)
- (int64_t) ttl;
- (void) setTtl: (int64_t) ttl;
#endif
- (BOOL) ttlIsSet;

@end

@interface RatingResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  NSString * __ratingID;
  Reply * __socialReply;
  ReviewResponse * __reviewResponse;

  BOOL __response_isset;
  BOOL __ratingID_isset;
  BOOL __socialReply_isset;
  BOOL __reviewResponse_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, retain, getter=ratingID, setter=setRatingID:) NSString * ratingID;
@property (nonatomic, retain, getter=socialReply, setter=setSocialReply:) Reply * socialReply;
@property (nonatomic, retain, getter=reviewResponse, setter=setReviewResponse:) ReviewResponse * reviewResponse;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response ratingID: (NSString *) ratingID socialReply: (Reply *) socialReply reviewResponse: (ReviewResponse *) reviewResponse;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (NSString *) ratingID;
- (void) setRatingID: (NSString *) ratingID;
#endif
- (BOOL) ratingIDIsSet;

#if !__has_feature(objc_arc)
- (Reply *) socialReply;
- (void) setSocialReply: (Reply *) socialReply;
#endif
- (BOOL) socialReplyIsSet;

#if !__has_feature(objc_arc)
- (ReviewResponse *) reviewResponse;
- (void) setReviewResponse: (ReviewResponse *) reviewResponse;
#endif
- (BOOL) reviewResponseIsSet;

@end

@interface SummaryResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  NSMutableArray * __aggregates;

  BOOL __response_isset;
  BOOL __aggregates_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, retain, getter=aggregates, setter=setAggregates:) NSMutableArray * aggregates;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response aggregates: (NSMutableArray *) aggregates;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) aggregates;
- (void) setAggregates: (NSMutableArray *) aggregates;
#endif
- (BOOL) aggregatesIsSet;

@end

@interface SocialFeedResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  NSMutableArray * __socialPosts;
  int64_t __postsCount;

  BOOL __response_isset;
  BOOL __socialPosts_isset;
  BOOL __postsCount_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, retain, getter=socialPosts, setter=setSocialPosts:) NSMutableArray * socialPosts;
@property (nonatomic, getter=postsCount, setter=setPostsCount:) int64_t postsCount;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response socialPosts: (NSMutableArray *) socialPosts postsCount: (int64_t) postsCount;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) socialPosts;
- (void) setSocialPosts: (NSMutableArray *) socialPosts;
#endif
- (BOOL) socialPostsIsSet;

#if !__has_feature(objc_arc)
- (int64_t) postsCount;
- (void) setPostsCount: (int64_t) postsCount;
#endif
- (BOOL) postsCountIsSet;

@end

@interface SocialPostRepliesResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  NSMutableArray * __postReplies;

  BOOL __response_isset;
  BOOL __postReplies_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, retain, getter=postReplies, setter=setPostReplies:) NSMutableArray * postReplies;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response postReplies: (NSMutableArray *) postReplies;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) postReplies;
- (void) setPostReplies: (NSMutableArray *) postReplies;
#endif
- (BOOL) postRepliesIsSet;

@end

@interface TODOFeedResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  NSMutableArray * __todoItems;
  int32_t __totalCount;
  int32_t __start;

  BOOL __response_isset;
  BOOL __todoItems_isset;
  BOOL __totalCount_isset;
  BOOL __start_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, retain, getter=todoItems, setter=setTodoItems:) NSMutableArray * todoItems;
@property (nonatomic, getter=totalCount, setter=setTotalCount:) int32_t totalCount;
@property (nonatomic, getter=start, setter=setStart:) int32_t start;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response todoItems: (NSMutableArray *) todoItems totalCount: (int32_t) totalCount start: (int32_t) start;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) todoItems;
- (void) setTodoItems: (NSMutableArray *) todoItems;
#endif
- (BOOL) todoItemsIsSet;

#if !__has_feature(objc_arc)
- (int32_t) totalCount;
- (void) setTotalCount: (int32_t) totalCount;
#endif
- (BOOL) totalCountIsSet;

#if !__has_feature(objc_arc)
- (int32_t) start;
- (void) setStart: (int32_t) start;
#endif
- (BOOL) startIsSet;

@end

@interface UpdateTODOPostRequest : NSObject <TBase, NSCoding> {
  int __action;
  NSString * __schedulePostId;
  NSMutableArray * __locations;
  SearchFilter * __searchCriteria;
  int32_t __start;
  int32_t __pageCount;

  BOOL __action_isset;
  BOOL __schedulePostId_isset;
  BOOL __locations_isset;
  BOOL __searchCriteria_isset;
  BOOL __start_isset;
  BOOL __pageCount_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=action, setter=setAction:) int action;
@property (nonatomic, retain, getter=schedulePostId, setter=setSchedulePostId:) NSString * schedulePostId;
@property (nonatomic, retain, getter=locations, setter=setLocations:) NSMutableArray * locations;
@property (nonatomic, retain, getter=searchCriteria, setter=setSearchCriteria:) SearchFilter * searchCriteria;
@property (nonatomic, getter=start, setter=setStart:) int32_t start;
@property (nonatomic, getter=pageCount, setter=setPageCount:) int32_t pageCount;
#endif

- (id) init;
- (id) initWithAction: (int) action schedulePostId: (NSString *) schedulePostId locations: (NSMutableArray *) locations searchCriteria: (SearchFilter *) searchCriteria start: (int32_t) start pageCount: (int32_t) pageCount;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) action;
- (void) setAction: (int) action;
#endif
- (BOOL) actionIsSet;

#if !__has_feature(objc_arc)
- (NSString *) schedulePostId;
- (void) setSchedulePostId: (NSString *) schedulePostId;
#endif
- (BOOL) schedulePostIdIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) locations;
- (void) setLocations: (NSMutableArray *) locations;
#endif
- (BOOL) locationsIsSet;

#if !__has_feature(objc_arc)
- (SearchFilter *) searchCriteria;
- (void) setSearchCriteria: (SearchFilter *) searchCriteria;
#endif
- (BOOL) searchCriteriaIsSet;

#if !__has_feature(objc_arc)
- (int32_t) start;
- (void) setStart: (int32_t) start;
#endif
- (BOOL) startIsSet;

#if !__has_feature(objc_arc)
- (int32_t) pageCount;
- (void) setPageCount: (int32_t) pageCount;
#endif
- (BOOL) pageCountIsSet;

@end

@interface PostLocationResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  NSMutableDictionary * __locations;

  BOOL __response_isset;
  BOOL __locations_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, retain, getter=locations, setter=setLocations:) NSMutableDictionary * locations;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response locations: (NSMutableDictionary *) locations;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) locations;
- (void) setLocations: (NSMutableDictionary *) locations;
#endif
- (BOOL) locationsIsSet;

@end

@interface GetBusinessListingsResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  NSMutableArray * __locationListings;
  NSMutableArray * __sourceListings;

  BOOL __response_isset;
  BOOL __locationListings_isset;
  BOOL __sourceListings_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, retain, getter=locationListings, setter=setLocationListings:) NSMutableArray * locationListings;
@property (nonatomic, retain, getter=sourceListings, setter=setSourceListings:) NSMutableArray * sourceListings;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response locationListings: (NSMutableArray *) locationListings sourceListings: (NSMutableArray *) sourceListings;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) locationListings;
- (void) setLocationListings: (NSMutableArray *) locationListings;
#endif
- (BOOL) locationListingsIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) sourceListings;
- (void) setSourceListings: (NSMutableArray *) sourceListings;
#endif
- (BOOL) sourceListingsIsSet;

@end

@interface ActivityResponse : NSObject <TBase, NSCoding> {
  Response * __response;
  NSMutableDictionary * __activities;

  BOOL __response_isset;
  BOOL __activities_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=response, setter=setResponse:) Response * response;
@property (nonatomic, retain, getter=activities, setter=setActivities:) NSMutableDictionary * activities;
#endif

- (id) init;
- (id) initWithResponse: (Response *) response activities: (NSMutableDictionary *) activities;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Response *) response;
- (void) setResponse: (Response *) response;
#endif
- (BOOL) responseIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) activities;
- (void) setActivities: (NSMutableDictionary *) activities;
#endif
- (BOOL) activitiesIsSet;

@end

@protocol Mobile <NSObject>
- (FeedResponse *) getReviewsFeed: (int64_t) uptoTime start: (int32_t) start pageCount: (int32_t) pageCount searchCriteria: (SearchFilter *) searchCriteria;  // throws TException
- (SocialFeedResponse *) getSocialFeed: (int64_t) uptoTime start: (int32_t) start pageCount: (int32_t) pageCount searchCriteria: (SearchFilter *) searchCriteria;  // throws TException
- (TODOFeedResponse *) getTODOFeed: (int32_t) start pageCount: (int32_t) pageCount searchCriteria: (SearchFilter *) searchCriteria;  // throws TException
- (SocialPostRepliesResponse *) getSocialReplies: (NSString *) parentId start: (int32_t) start;  // throws TException
- (GetRatingResponse *) getRating: (NSString *) ratingId;  // throws TException
- (SocialPostResponse *) getSocialPost: (NSString *) socialPostId;  // throws TException
- (PermissionsResponse *) getUserConfig;  // throws TException
- (SaveSettingsResponse *) saveUserSettings: (NSMutableArray *) userSettings;  // throws TException
- (RatingResponse *) publishRating: (NSString *) ratingID isUnpublish: (BOOL) isUnpublish;  // throws TException
- (RatingResponse *) deleteRating: (NSString *) ratingID isSocial: (BOOL) isSocial;  // throws TException
- (RatingResponse *) deleteSocialReply: (NSString *) postReplyId;  // throws TException
- (RatingResponse *) flagSocialPost: (NSString *) postId;  // throws TException
- (Response *) createSocialPost: (SocialPostRequest *) createPostRequest;  // throws TException
- (RatingResponse *) replyToRating: (NSString *) ratingID recepientEmail: (NSString *) recepientEmail message: (NSString *) message isForward: (BOOL) isForward isSocial: (BOOL) isSocial;  // throws TException
- (TODOFeedResponse *) updateTODOPost: (UpdateTODOPostRequest *) request;  // throws TException
- (PostLocationResponse *) getPostLocations: (NSString *) schedulePostId;  // throws TException
- (SummaryResponse *) getSummaryIds: (NSMutableArray *) summaryCells;  // throws TException
- (SummaryResponse *) getSummary;  // throws TException
- (Response *) logout;  // throws TException
- (GetBusinessListingsResponse *) getBusinessListings: (SearchFilter *) searchCriteria;  // throws TException
- (ActivityResponse *) getActivityFeed;  // throws TException
@end

@interface MobileClient : NSObject <Mobile> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface MobileProcessor : NSObject <TProcessor> {
  id <Mobile> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithMobile: (id <Mobile>) service;
- (id<Mobile>) service;
@end

@interface MobileConstants : NSObject {
}
+ (int32_t) ERROR_SVC;
+ (int32_t) ERROR_SOURCES_SVC;
+ (int32_t) ERROR_SOCIAL_SVC;
+ (int32_t) ERROR_RATING_SVC;
+ (int32_t) ERROR_GETRATING_SVC;
+ (int32_t) ERROR_PUBLISH_SVC;
+ (int32_t) ERROR_SAVE_DISTRIBUTION_SVC;
+ (int32_t) ERROR_DELETE_SVC;
+ (int32_t) ERROR_SAVE_REQREV_SVC;
+ (int32_t) ERROR_REVIEW_RESPONSE_SVC;
+ (int32_t) ERROR_SOCIAL_REPLY_SVC;
+ (int32_t) ERROR_SOCIAL_POST_SVC;
+ (int32_t) ERROR_SOCIAL_S3_SVC;
+ (int32_t) ERROR_DISTRIBUTION_SVC;
+ (int32_t) ERROR_USER_SVC;
+ (int32_t) ERROR_USER_ACTIVITY_SVC;
+ (int32_t) ERROR_AUTH_READ_RATINGS;
+ (int32_t) ERROR_AUTH_READ_SOCIAL;
+ (int32_t) ERROR_VALIDATION_RATINGID;
+ (int32_t) ERROR_AUTH_PUBLISH_RATING;
+ (int32_t) ERROR_VALIDATION_PUBLISH;
+ (int32_t) ERROR_VALIDATION_UNPUBLISH;
+ (int32_t) ERROR_VALIDATION_NOTKIOSK;
+ (int32_t) ERROR_AUTH_DELETE_RATING;
+ (int32_t) ERROR_VALIDATION_RFMESSAGE;
+ (int32_t) ERROR_VALIDATION_EMAIL;
+ (int32_t) ERROR_VALIDATION_SOCIAL_REPLY_ID;
+ (int32_t) ERROR_AUTH_REPLY_RATING;
+ (int32_t) ERROR_AUTH_FLAG_POST;
+ (int32_t) ERROR_VALIDATION_POSTTEXT;
+ (int32_t) ERROR_AUTH_POST_SOCIAL;
+ (int32_t) ERROR_VALIDATION_SOCIAL_NO_LOCATION;
+ (int32_t) ERROR_VALIDATION_SOCIAL_NO_SOURCE;
+ (int32_t) ERROR_VALIDATION_SOCIAL_TIME;
+ (int32_t) ERROR_VALIDATION_REQUEST;
+ (int32_t) ERROR_VALIDATION_SOCIAL_TRANSMISSION;
+ (int32_t) ERROR_AUTH_SOCIAL_APPROVE_REJECT;
+ (int32_t) ERROR_VALIDATION_SOCIAL_DUPLICATE;
+ (int32_t) ERROR_SUMMARY_INVALID_CELL;
+ (int32_t) ERROR_SEARCH_SOURCE_LISTING_AUDITS;
+ (int32_t) ERROR_SEARCH_LISTING_AUDITS;
+ (int32_t) ERROR_AUTH_VIEW_BUSINESS_LISTINGS;
+ (int32_t) TWITTER_URL_LENGTH;
+ (NSString *) SUMMARY_OVERALL_SCORE;
+ (NSString *) SUMMARY_NOREVIEWS_THIRDPARTY_SOURCES;
+ (NSString *) SUMMARY_NOREVIEWS_THIRDPARTY_TOTALCOUNT;
+ (NSString *) SUMMARY_OVERALL_SCORE_MINUS_90_DAYS;
+ (NSString *) SUMMARY_KIOSK_TRACKING;
+ (NSString *) SUMMARY_THIRD_PARTY_SOURCE_TRACKING;
+ (NSString *) SUMMARY_THIRD_PARTY_SOURCE_TRACKING_NO_KIOSK;
+ (NSString *) SUMMARY_THIRD_PARTY_SOURCE_ALL_TIME;
+ (NSString *) SUMMARY_AVGRATING_SOURCE;
+ (NSString *) SUMMARY_AVGRATING_ALL;
+ (NSString *) SUMMARY_NOREVIEWS_SOURCE;
+ (NSString *) SUMMARY_SOCIALCOUNTS_SOURCE;
+ (NSString *) SUMMARY_SOCIALCOUNTS_TOTAL;
+ (NSString *) SUMMARY_SOCIALCOUNTS_SOURCE_30_DAYS;
+ (NSString *) SUMMARY_SOCIALCOUNTS_TOTAL_30_DAYS;
+ (NSString *) SUMMARY_BUSINESS_LISTINGS_SCORE;
+ (NSString *) SUMMARY_BUSINESS_LISTINGS_SCORE_VALUE;
+ (NSString *) SUMMARY_OVERALL_SCORE_VALUE;
+ (NSString *) SUMMARY_OVERALL_SCORE_WEIGHTEDRATING;
+ (NSString *) SUMMARY_OVERALL_SCORE_VISIBILITY;
+ (NSString *) SUMMARY_OVERALL_SCORE_SPREAD;
+ (NSString *) SUMMARY_OVERALL_SCORE_LENGTH;
+ (NSString *) SUMMARY_OVERALL_SCORE_TIME;
+ (NSString *) SUMMARY_OVERALL_SCORE_VOLUME;
+ (NSString *) SUMMARY_OVERALL_SCORE_WEIGHTEDRATING_FILLCOLOR;
+ (NSString *) SUMMARY_OVERALL_SCORE_VISIBILITY_FILLCOLOR;
+ (NSString *) SUMMARY_OVERALL_SCORE_SPREAD_FILLCOLOR;
+ (NSString *) SUMMARY_OVERALL_SCORE_LENGTH_FILLCOLOR;
+ (NSString *) SUMMARY_OVERALL_SCORE_TIME_FILLCOLOR;
+ (NSString *) SUMMARY_OVERALL_SCORE_VOLUME_FILLCOLOR;
+ (NSString *) SUMMARY_AVGRATING_ALL_VALUE;
+ (NSString *) SUMMARY_NOREVIEWS_SOURCELOGO;
+ (NSString *) SUMMARY_NOREVIEWS_SOURCENAME;
+ (NSString *) SUMMARY_SOURCE_LOGO_URL;
+ (NSString *) SUMMARY_SOURCE_NAME;
+ (NSString *) SUMMARY_WEEK_TRACKING_DATE;
+ (NSString *) SUMMARY_MONTH_TRACKING_DATE;
+ (NSString *) SUMMARY_SENTIMENT_POSITIVE;
+ (NSString *) SUMMARY_SENTIMENT_NEUTRAL;
+ (NSString *) SUMMARY_SENTIMENT_NEGATIVE;
+ (NSString *) SUMMARY_GRAPH_FILLCOLOR;
+ (NSString *) FACEBOOK_PROVIDER_NAME;
+ (NSString *) FACEBOOK_COMMENT_COUNT;
+ (NSString *) FACEBOOK_LIKE_COUNT;
+ (NSString *) FACEBOOK_SHARE_COUNT;
+ (NSString *) FACEBOOK_TAG_URL;
+ (NSString *) FACEBOOK_HASHTAG_URL;
+ (NSString *) TWITTER_PROVIDER_NAME;
+ (NSString *) TWITTER_MENTIONS_COUNT;
+ (NSString *) TWITTER_FOLLOWER_COUNT;
+ (NSString *) TWITTER_RETWEET_COUNT;
+ (NSString *) TWITTER_UPVOTED;
+ (NSString *) TWITTER_TAG_URL;
+ (NSString *) TWITTER_HASHTAG_URL;
+ (NSString *) GOOGLE_PROVIDER_NAME;
+ (NSString *) GOOGLE_COMMENT_COUNT;
+ (NSString *) GOOGLE_PLUS_ONE_COUNT;
+ (NSString *) GOOGLE_CIRCLED_BY_COUNT;
+ (NSString *) GOOGLE_RESHARE_COUNT;
+ (NSString *) GOOGLE_TAG_URL;
+ (NSString *) GOOGLE_HASHTAG_URL;
+ (NSString *) YOUTUBE_DISLIKE_COUNT;
+ (NSString *) YOUTUBE_VIEW_COUNT;
+ (NSString *) YOUTUBE_LIKE_COUNT;
+ (NSString *) YOUTUBE_FAVORITE_COUNT;
+ (NSString *) IMAGE_FORMAT;
+ (NSString *) IMAGE_FILENAME;
+ (NSString *) IMAGE_DATE_TIME;
+ (NSString *) IMAGE_LAT_LNG;
@end
