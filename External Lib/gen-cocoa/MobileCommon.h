/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"


enum Status {
  Status_OK = 1,
  Status_FAIL = 2
};

enum ErrorCode {
  ErrorCode_NoError = 0,
  ErrorCode_StaleData = 1,
  ErrorCode_InternalConnectivity = 2,
  ErrorCode_ExternalConnectivity = 3,
  ErrorCode_Validation = 4,
  ErrorCode_UnknownId = 5
};

enum ResponseCode {
  ResponseCode_Success = 1,
  ResponseCode_Failed = 2,
  ResponseCode_SuccessWithErrors = 3,
  ResponseCode_InProgress = 4,
  ResponseCode_Acknowledge = 5,
  ResponseCode_Undefined = 6,
  ResponseCode_NotApplicable = 7,
  ResponseCode_OverCapacity = 8
};

enum RatingBucket {
  RatingBucket_VERY_BAD = 1,
  RatingBucket_BAD = 2,
  RatingBucket_NEUTRAL = 3,
  RatingBucket_GOOD = 4,
  RatingBucket_VERY_GOOD = 5,
  RatingBucket_NONE = 6
};

enum TimeBucket {
  TimeBucket_TWO_MONTHS = 1,
  TimeBucket_FOUR_MONTHS = 2,
  TimeBucket_SIX_MONTHS = 3,
  TimeBucket_OVER_SIX_MONTHS = 4
};

enum RatingType {
  RatingType_UNKNOWN = 0,
  RatingType_WAIT_TIME = 1,
  RatingType_HELPFULNESS = 2,
  RatingType_KNOWLEDGE = 3,
  RatingType_WOULD_RECOMMEND = 4,
  RatingType_TRUSTWORTHINESS = 5,
  RatingType_COMMUNICATION = 6,
  RatingType_LISTENING = 7,
  RatingType_EFFICIENCY = 8,
  RatingType_EASE_OF_SCHEDULING = 9,
  RatingType_CLEANLINESS = 10,
  RatingType_FRIENDLINESS = 11,
  RatingType_STAFF = 12,
  RatingType_PUNCTUAL = 13,
  RatingType_FOLLOW_UP = 14,
  RatingType_DIAGNOSIS = 15,
  RatingType_MANNER = 16,
  RatingType_VALUE = 17,
  RatingType_ROOM_QUALITY = 18,
  RatingType_BED_COMFORT = 19,
  RatingType_SERVICE = 20,
  RatingType_CONDITION = 21,
  RatingType_ROOM_COMFORT = 22,
  RatingType_LOCATION = 23,
  RatingType_NEIGHBORHOOD = 24,
  RatingType_AMENITIES = 25,
  RatingType_FOOD = 26,
  RatingType_ATMOSPHERE = 27,
  RatingType_CUSTOMER_SERVICE = 28,
  RatingType_BUYING_PROCESS = 29,
  RatingType_QUALITY_OF_REPAIR = 30,
  RatingType_OVERALL_FACILITIES = 31,
  RatingType_OVERALL_EXPERIENCE = 32,
  RatingType_PRICE = 33,
  RatingType_PARKING = 34,
  RatingType_MAINTENANCE = 35,
  RatingType_CONSTRUCTION = 36,
  RatingType_NOISE = 37,
  RatingType_GROUNDS = 38,
  RatingType_SAFETY = 39,
  RatingType_OFFICE_STAFF = 40,
  RatingType_RECOMMENDED_BY = 41,
  RatingType_APPEAL = 42,
  RatingType_FACILITIES = 43,
  RatingType_OVERALL = 44,
  RatingType_DECOR = 45,
  RatingType_QUALITY = 46
};

enum SourceStatus {
  SourceStatus_OK = 1,
  SourceStatus_DISABLED = 2
};

enum SortOrder {
  SortOrder_ASC = 1,
  SortOrder_DESC = 2
};

enum TagType {
  TagType_UNKNOWN = 0,
  TagType_USEFUL = 1,
  TagType_FUNNY = 2,
  TagType_COOL = 3,
  TagType_NOT_USEFUL = 4
};

enum ConfigTypeCategory {
  ConfigTypeCategory_Reviews = 1,
  ConfigTypeCategory_ReviewSites = 2,
  ConfigTypeCategory_SocialSites = 3,
  ConfigTypeCategory_Kiosk = 4,
  ConfigTypeCategory_Locations = 5,
  ConfigTypeCategory_PushNotification = 6
};

typedef int64_t TenantID;

typedef NSString * SourceCode;

typedef NSString * SourceGroup;

@interface ValidationError : NSObject <TBase, NSCoding> {
  NSString * __field;
  NSString * __code;
  NSString * __message;
  BOOL __soft;

  BOOL __field_isset;
  BOOL __code_isset;
  BOOL __message_isset;
  BOOL __soft_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=field, setter=setField:) NSString * field;
@property (nonatomic, retain, getter=code, setter=setCode:) NSString * code;
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
@property (nonatomic, getter=soft, setter=setSoft:) BOOL soft;
#endif

- (id) init;
- (id) initWithField: (NSString *) field code: (NSString *) code message: (NSString *) message soft: (BOOL) soft;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) field;
- (void) setField: (NSString *) field;
#endif
- (BOOL) fieldIsSet;

#if !__has_feature(objc_arc)
- (NSString *) code;
- (void) setCode: (NSString *) code;
#endif
- (BOOL) codeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) message;
- (void) setMessage: (NSString *) message;
#endif
- (BOOL) messageIsSet;

#if !__has_feature(objc_arc)
- (BOOL) soft;
- (void) setSoft: (BOOL) soft;
#endif
- (BOOL) softIsSet;

@end

@interface Error : NSObject <TBase, NSCoding> {
  int32_t __code;
  NSString * __message;

  BOOL __code_isset;
  BOOL __message_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=code, setter=setCode:) int32_t code;
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
#endif

- (id) init;
- (id) initWithCode: (int32_t) code message: (NSString *) message;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) code;
- (void) setCode: (int32_t) code;
#endif
- (BOOL) codeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) message;
- (void) setMessage: (NSString *) message;
#endif
- (BOOL) messageIsSet;

@end

@interface Response : NSObject <TBase, NSCoding> {
  int __responseCode;
  NSString * __id;
  NSMutableArray * __validationErrors;
  Error * __error;

  BOOL __responseCode_isset;
  BOOL __id_isset;
  BOOL __validationErrors_isset;
  BOOL __error_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=responseCode, setter=setResponseCode:) int responseCode;
@property (nonatomic, retain, getter=id, setter=setId:) NSString * id;
@property (nonatomic, retain, getter=validationErrors, setter=setValidationErrors:) NSMutableArray * validationErrors;
@property (nonatomic, retain, getter=error, setter=setError:) Error * error;
#endif

- (id) init;
- (id) initWithResponseCode: (int) responseCode id: (NSString *) id validationErrors: (NSMutableArray *) validationErrors error: (Error *) error;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) responseCode;
- (void) setResponseCode: (int) responseCode;
#endif
- (BOOL) responseCodeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) id;
- (void) setId: (NSString *) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) validationErrors;
- (void) setValidationErrors: (NSMutableArray *) validationErrors;
#endif
- (BOOL) validationErrorsIsSet;

#if !__has_feature(objc_arc)
- (Error *) error;
- (void) setError: (Error *) error;
#endif
- (BOOL) errorIsSet;

@end

@interface Attribute : NSObject <TBase, NSCoding> {
  NSString * __name;
  NSString * __value;

  BOOL __name_isset;
  BOOL __value_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=value, setter=setValue:) NSString * value;
#endif

- (id) init;
- (id) initWithName: (NSString *) name value: (NSString *) value;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) value;
- (void) setValue: (NSString *) value;
#endif
- (BOOL) valueIsSet;

@end

@interface TwitterSearchConfig : NSObject <TBase, NSCoding> {
  NSString * __id;
  NSString * __query;
  NSString * __radius;
  NSMutableArray * __labels;
  BOOL __userDefined;

  BOOL __id_isset;
  BOOL __query_isset;
  BOOL __radius_isset;
  BOOL __labels_isset;
  BOOL __userDefined_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) NSString * id;
@property (nonatomic, retain, getter=query, setter=setQuery:) NSString * query;
@property (nonatomic, retain, getter=radius, setter=setRadius:) NSString * radius;
@property (nonatomic, retain, getter=labels, setter=setLabels:) NSMutableArray * labels;
@property (nonatomic, getter=userDefined, setter=setUserDefined:) BOOL userDefined;
#endif

- (id) init;
- (id) initWithId: (NSString *) id query: (NSString *) query radius: (NSString *) radius labels: (NSMutableArray *) labels userDefined: (BOOL) userDefined;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) id;
- (void) setId: (NSString *) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) query;
- (void) setQuery: (NSString *) query;
#endif
- (BOOL) queryIsSet;

#if !__has_feature(objc_arc)
- (NSString *) radius;
- (void) setRadius: (NSString *) radius;
#endif
- (BOOL) radiusIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) labels;
- (void) setLabels: (NSMutableArray *) labels;
#endif
- (BOOL) labelsIsSet;

#if !__has_feature(objc_arc)
- (BOOL) userDefined;
- (void) setUserDefined: (BOOL) userDefined;
#endif
- (BOOL) userDefinedIsSet;

@end

@interface TwitterConfig : NSObject <TBase, NSCoding> {
  NSString * __username;
  BOOL __fetchUserTimeline;
  NSMutableArray * __searches;

  BOOL __username_isset;
  BOOL __fetchUserTimeline_isset;
  BOOL __searches_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=username, setter=setUsername:) NSString * username;
@property (nonatomic, getter=fetchUserTimeline, setter=setFetchUserTimeline:) BOOL fetchUserTimeline;
@property (nonatomic, retain, getter=searches, setter=setSearches:) NSMutableArray * searches;
#endif

- (id) init;
- (id) initWithUsername: (NSString *) username fetchUserTimeline: (BOOL) fetchUserTimeline searches: (NSMutableArray *) searches;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) username;
- (void) setUsername: (NSString *) username;
#endif
- (BOOL) usernameIsSet;

#if !__has_feature(objc_arc)
- (BOOL) fetchUserTimeline;
- (void) setFetchUserTimeline: (BOOL) fetchUserTimeline;
#endif
- (BOOL) fetchUserTimelineIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) searches;
- (void) setSearches: (NSMutableArray *) searches;
#endif
- (BOOL) searchesIsSet;

@end

@interface SourceUrl : NSObject <TBase, NSCoding> {
  NSString * __sourceUrl;
  NSString * __source;
  BOOL __isCompetitor;
  TwitterConfig * __twitterConfig;
  BOOL __isKioskReviewable;

  BOOL __sourceUrl_isset;
  BOOL __source_isset;
  BOOL __isCompetitor_isset;
  BOOL __twitterConfig_isset;
  BOOL __isKioskReviewable_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=sourceUrl, setter=setSourceUrl:) NSString * sourceUrl;
@property (nonatomic, retain, getter=source, setter=setSource:) NSString * source;
@property (nonatomic, getter=isCompetitor, setter=setIsCompetitor:) BOOL isCompetitor;
@property (nonatomic, retain, getter=twitterConfig, setter=setTwitterConfig:) TwitterConfig * twitterConfig;
@property (nonatomic, getter=isKioskReviewable, setter=setIsKioskReviewable:) BOOL isKioskReviewable;
#endif

- (id) init;
- (id) initWithSourceUrl: (NSString *) sourceUrl source: (NSString *) source isCompetitor: (BOOL) isCompetitor twitterConfig: (TwitterConfig *) twitterConfig isKioskReviewable: (BOOL) isKioskReviewable;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) sourceUrl;
- (void) setSourceUrl: (NSString *) sourceUrl;
#endif
- (BOOL) sourceUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) source;
- (void) setSource: (NSString *) source;
#endif
- (BOOL) sourceIsSet;

#if !__has_feature(objc_arc)
- (BOOL) isCompetitor;
- (void) setIsCompetitor: (BOOL) isCompetitor;
#endif
- (BOOL) isCompetitorIsSet;

#if !__has_feature(objc_arc)
- (TwitterConfig *) twitterConfig;
- (void) setTwitterConfig: (TwitterConfig *) twitterConfig;
#endif
- (BOOL) twitterConfigIsSet;

#if !__has_feature(objc_arc)
- (BOOL) isKioskReviewable;
- (void) setIsKioskReviewable: (BOOL) isKioskReviewable;
#endif
- (BOOL) isKioskReviewableIsSet;

@end

@interface LatLng : NSObject <TBase, NSCoding> {
  double __lat;
  double __lng;

  BOOL __lat_isset;
  BOOL __lng_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=lat, setter=setLat:) double lat;
@property (nonatomic, getter=lng, setter=setLng:) double lng;
#endif

- (id) init;
- (id) initWithLat: (double) lat lng: (double) lng;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (double) lat;
- (void) setLat: (double) lat;
#endif
- (BOOL) latIsSet;

#if !__has_feature(objc_arc)
- (double) lng;
- (void) setLng: (double) lng;
#endif
- (BOOL) lngIsSet;

@end

@interface Kiosk : NSObject <TBase, NSCoding> {
  NSString * __serialNum;
  NSString * __unlockKey;

  BOOL __serialNum_isset;
  BOOL __unlockKey_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=serialNum, setter=setSerialNum:) NSString * serialNum;
@property (nonatomic, retain, getter=unlockKey, setter=setUnlockKey:) NSString * unlockKey;
#endif

- (id) init;
- (id) initWithSerialNum: (NSString *) serialNum unlockKey: (NSString *) unlockKey;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) serialNum;
- (void) setSerialNum: (NSString *) serialNum;
#endif
- (BOOL) serialNumIsSet;

#if !__has_feature(objc_arc)
- (NSString *) unlockKey;
- (void) setUnlockKey: (NSString *) unlockKey;
#endif
- (BOOL) unlockKeyIsSet;

@end

@interface Link : NSObject <TBase, NSCoding> {
  NSString * __text;
  NSString * __linkUrl;

  BOOL __text_isset;
  BOOL __linkUrl_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=text, setter=setText:) NSString * text;
@property (nonatomic, retain, getter=linkUrl, setter=setLinkUrl:) NSString * linkUrl;
#endif

- (id) init;
- (id) initWithText: (NSString *) text linkUrl: (NSString *) linkUrl;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) text;
- (void) setText: (NSString *) text;
#endif
- (BOOL) textIsSet;

#if !__has_feature(objc_arc)
- (NSString *) linkUrl;
- (void) setLinkUrl: (NSString *) linkUrl;
#endif
- (BOOL) linkUrlIsSet;

@end

@interface Photo : NSObject <TBase, NSCoding> {
  NSString * __source;
  NSString * __ext;

  BOOL __source_isset;
  BOOL __ext_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=source, setter=setSource:) NSString * source;
@property (nonatomic, retain, getter=ext, setter=setExt:) NSString * ext;
#endif

- (id) init;
- (id) initWithSource: (NSString *) source ext: (NSString *) ext;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) source;
- (void) setSource: (NSString *) source;
#endif
- (BOOL) sourceIsSet;

#if !__has_feature(objc_arc)
- (NSString *) ext;
- (void) setExt: (NSString *) ext;
#endif
- (BOOL) extIsSet;

@end

@interface Publish : NSObject <TBase, NSCoding> {
  BOOL __enabled;
  NSString * __publishDescription;
  NSMutableArray * __photos;
  NSMutableArray * __links;
  BOOL __inheritPublish;

  BOOL __enabled_isset;
  BOOL __publishDescription_isset;
  BOOL __photos_isset;
  BOOL __links_isset;
  BOOL __inheritPublish_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=enabled, setter=setEnabled:) BOOL enabled;
@property (nonatomic, retain, getter=publishDescription, setter=setPublishDescription:) NSString * publishDescription;
@property (nonatomic, retain, getter=photos, setter=setPhotos:) NSMutableArray * photos;
@property (nonatomic, retain, getter=links, setter=setLinks:) NSMutableArray * links;
@property (nonatomic, getter=inheritPublish, setter=setInheritPublish:) BOOL inheritPublish;
#endif

- (id) init;
- (id) initWithEnabled: (BOOL) enabled publishDescription: (NSString *) publishDescription photos: (NSMutableArray *) photos links: (NSMutableArray *) links inheritPublish: (BOOL) inheritPublish;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (BOOL) enabled;
- (void) setEnabled: (BOOL) enabled;
#endif
- (BOOL) enabledIsSet;

#if !__has_feature(objc_arc)
- (NSString *) publishDescription;
- (void) setPublishDescription: (NSString *) publishDescription;
#endif
- (BOOL) publishDescriptionIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) photos;
- (void) setPhotos: (NSMutableArray *) photos;
#endif
- (BOOL) photosIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) links;
- (void) setLinks: (NSMutableArray *) links;
#endif
- (BOOL) linksIsSet;

#if !__has_feature(objc_arc)
- (BOOL) inheritPublish;
- (void) setInheritPublish: (BOOL) inheritPublish;
#endif
- (BOOL) inheritPublishIsSet;

@end

@interface Question : NSObject <TBase, NSCoding> {
  NSString * __category;
  NSString * __name;
  NSString * __label;

  BOOL __category_isset;
  BOOL __name_isset;
  BOOL __label_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=category, setter=setCategory:) NSString * category;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=label, setter=setLabel:) NSString * label;
#endif

- (id) init;
- (id) initWithCategory: (NSString *) category name: (NSString *) name label: (NSString *) label;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) category;
- (void) setCategory: (NSString *) category;
#endif
- (BOOL) categoryIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) label;
- (void) setLabel: (NSString *) label;
#endif
- (BOOL) labelIsSet;

@end

@interface ReviewTemplate : NSObject <TBase, NSCoding> {
  NSMutableArray * __questions;
  BOOL __inheritReviewTemplate;
  BOOL __requireAck;

  BOOL __questions_isset;
  BOOL __inheritReviewTemplate_isset;
  BOOL __requireAck_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=questions, setter=setQuestions:) NSMutableArray * questions;
@property (nonatomic, getter=inheritReviewTemplate, setter=setInheritReviewTemplate:) BOOL inheritReviewTemplate;
@property (nonatomic, getter=requireAck, setter=setRequireAck:) BOOL requireAck;
#endif

- (id) init;
- (id) initWithQuestions: (NSMutableArray *) questions inheritReviewTemplate: (BOOL) inheritReviewTemplate requireAck: (BOOL) requireAck;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSMutableArray *) questions;
- (void) setQuestions: (NSMutableArray *) questions;
#endif
- (BOOL) questionsIsSet;

#if !__has_feature(objc_arc)
- (BOOL) inheritReviewTemplate;
- (void) setInheritReviewTemplate: (BOOL) inheritReviewTemplate;
#endif
- (BOOL) inheritReviewTemplateIsSet;

#if !__has_feature(objc_arc)
- (BOOL) requireAck;
- (void) setRequireAck: (BOOL) requireAck;
#endif
- (BOOL) requireAckIsSet;

@end

@interface EmailUser : NSObject <TBase, NSCoding> {
  NSString * __name;
  NSString * __email;

  BOOL __name_isset;
  BOOL __email_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=email, setter=setEmail:) NSString * email;
#endif

- (id) init;
- (id) initWithName: (NSString *) name email: (NSString *) email;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) email;
- (void) setEmail: (NSString *) email;
#endif
- (BOOL) emailIsSet;

@end

@interface Address : NSObject <TBase, NSCoding> {
  NSString * __line1;
  NSString * __line2;
  NSString * __state;
  NSString * __city;
  NSString * __zipcode;
  NSString * __country;

  BOOL __line1_isset;
  BOOL __line2_isset;
  BOOL __state_isset;
  BOOL __city_isset;
  BOOL __zipcode_isset;
  BOOL __country_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=line1, setter=setLine1:) NSString * line1;
@property (nonatomic, retain, getter=line2, setter=setLine2:) NSString * line2;
@property (nonatomic, retain, getter=state, setter=setState:) NSString * state;
@property (nonatomic, retain, getter=city, setter=setCity:) NSString * city;
@property (nonatomic, retain, getter=zipcode, setter=setZipcode:) NSString * zipcode;
@property (nonatomic, retain, getter=country, setter=setCountry:) NSString * country;
#endif

- (id) init;
- (id) initWithLine1: (NSString *) line1 line2: (NSString *) line2 state: (NSString *) state city: (NSString *) city zipcode: (NSString *) zipcode country: (NSString *) country;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) line1;
- (void) setLine1: (NSString *) line1;
#endif
- (BOOL) line1IsSet;

#if !__has_feature(objc_arc)
- (NSString *) line2;
- (void) setLine2: (NSString *) line2;
#endif
- (BOOL) line2IsSet;

#if !__has_feature(objc_arc)
- (NSString *) state;
- (void) setState: (NSString *) state;
#endif
- (BOOL) stateIsSet;

#if !__has_feature(objc_arc)
- (NSString *) city;
- (void) setCity: (NSString *) city;
#endif
- (BOOL) cityIsSet;

#if !__has_feature(objc_arc)
- (NSString *) zipcode;
- (void) setZipcode: (NSString *) zipcode;
#endif
- (BOOL) zipcodeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) country;
- (void) setCountry: (NSString *) country;
#endif
- (BOOL) countryIsSet;

@end

@interface Alternatives : NSObject <TBase, NSCoding> {
  NSMutableArray * __names;
  NSMutableArray * __addresses;
  NSMutableArray * __phones;
  NSMutableArray * __webUrls;

  BOOL __names_isset;
  BOOL __addresses_isset;
  BOOL __phones_isset;
  BOOL __webUrls_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=names, setter=setNames:) NSMutableArray * names;
@property (nonatomic, retain, getter=addresses, setter=setAddresses:) NSMutableArray * addresses;
@property (nonatomic, retain, getter=phones, setter=setPhones:) NSMutableArray * phones;
@property (nonatomic, retain, getter=webUrls, setter=setWebUrls:) NSMutableArray * webUrls;
#endif

- (id) init;
- (id) initWithNames: (NSMutableArray *) names addresses: (NSMutableArray *) addresses phones: (NSMutableArray *) phones webUrls: (NSMutableArray *) webUrls;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSMutableArray *) names;
- (void) setNames: (NSMutableArray *) names;
#endif
- (BOOL) namesIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) addresses;
- (void) setAddresses: (NSMutableArray *) addresses;
#endif
- (BOOL) addressesIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) phones;
- (void) setPhones: (NSMutableArray *) phones;
#endif
- (BOOL) phonesIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) webUrls;
- (void) setWebUrls: (NSMutableArray *) webUrls;
#endif
- (BOOL) webUrlsIsSet;

@end

@interface Location : NSObject <TBase, NSCoding> {
  NSString * __id;
  NSString * __code;
  NSString * __name;
  NSString * __longName;
  TenantID __tenantID;
  Address * __address;
  NSString * __phone;
  NSString * __web;
  NSString * __manager;
  NSString * __managerEmail;
  NSMutableArray * __emails;
  NSMutableArray * __attributes;
  NSMutableArray * __sourceUrls;
  NSMutableDictionary * __nextExpressions;
  LatLng * __latlng;
  Kiosk * __kiosk;
  NSString * __locationKey;
  NSString * __publishUrl;
  Publish * __publish;
  ReviewTemplate * __reviewTemplate;
  EmailUser * __emailFrom;
  Alternatives * __alternatives;
  NSString * __kioskUrl;
  NSString * __largeLogoPath;
  NSMutableArray * __socialSitesPostEnabled;

  BOOL __id_isset;
  BOOL __code_isset;
  BOOL __name_isset;
  BOOL __longName_isset;
  BOOL __tenantID_isset;
  BOOL __address_isset;
  BOOL __phone_isset;
  BOOL __web_isset;
  BOOL __manager_isset;
  BOOL __managerEmail_isset;
  BOOL __emails_isset;
  BOOL __attributes_isset;
  BOOL __sourceUrls_isset;
  BOOL __nextExpressions_isset;
  BOOL __latlng_isset;
  BOOL __kiosk_isset;
  BOOL __locationKey_isset;
  BOOL __publishUrl_isset;
  BOOL __publish_isset;
  BOOL __reviewTemplate_isset;
  BOOL __emailFrom_isset;
  BOOL __alternatives_isset;
  BOOL __kioskUrl_isset;
  BOOL __largeLogoPath_isset;
  BOOL __socialSitesPostEnabled_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) NSString * id;
@property (nonatomic, retain, getter=code, setter=setCode:) NSString * code;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=longName, setter=setLongName:) NSString * longName;
@property (nonatomic, getter=tenantID, setter=setTenantID:) TenantID tenantID;
@property (nonatomic, retain, getter=address, setter=setAddress:) Address * address;
@property (nonatomic, retain, getter=phone, setter=setPhone:) NSString * phone;
@property (nonatomic, retain, getter=web, setter=setWeb:) NSString * web;
@property (nonatomic, retain, getter=manager, setter=setManager:) NSString * manager;
@property (nonatomic, retain, getter=managerEmail, setter=setManagerEmail:) NSString * managerEmail;
@property (nonatomic, retain, getter=emails, setter=setEmails:) NSMutableArray * emails;
@property (nonatomic, retain, getter=attributes, setter=setAttributes:) NSMutableArray * attributes;
@property (nonatomic, retain, getter=sourceUrls, setter=setSourceUrls:) NSMutableArray * sourceUrls;
@property (nonatomic, retain, getter=nextExpressions, setter=setNextExpressions:) NSMutableDictionary * nextExpressions;
@property (nonatomic, retain, getter=latlng, setter=setLatlng:) LatLng * latlng;
@property (nonatomic, retain, getter=kiosk, setter=setKiosk:) Kiosk * kiosk;
@property (nonatomic, retain, getter=locationKey, setter=setLocationKey:) NSString * locationKey;
@property (nonatomic, retain, getter=publishUrl, setter=setPublishUrl:) NSString * publishUrl;
@property (nonatomic, retain, getter=publish, setter=setPublish:) Publish * publish;
@property (nonatomic, retain, getter=reviewTemplate, setter=setReviewTemplate:) ReviewTemplate * reviewTemplate;
@property (nonatomic, retain, getter=emailFrom, setter=setEmailFrom:) EmailUser * emailFrom;
@property (nonatomic, retain, getter=alternatives, setter=setAlternatives:) Alternatives * alternatives;
@property (nonatomic, retain, getter=kioskUrl, setter=setKioskUrl:) NSString * kioskUrl;
@property (nonatomic, retain, getter=largeLogoPath, setter=setLargeLogoPath:) NSString * largeLogoPath;
@property (nonatomic, retain, getter=socialSitesPostEnabled, setter=setSocialSitesPostEnabled:) NSMutableArray * socialSitesPostEnabled;
#endif

- (id) init;
- (id) initWithId: (NSString *) id code: (NSString *) code name: (NSString *) name longName: (NSString *) longName tenantID: (TenantID) tenantID address: (Address *) address phone: (NSString *) phone web: (NSString *) web manager: (NSString *) manager managerEmail: (NSString *) managerEmail emails: (NSMutableArray *) emails attributes: (NSMutableArray *) attributes sourceUrls: (NSMutableArray *) sourceUrls nextExpressions: (NSMutableDictionary *) nextExpressions latlng: (LatLng *) latlng kiosk: (Kiosk *) kiosk locationKey: (NSString *) locationKey publishUrl: (NSString *) publishUrl publish: (Publish *) publish reviewTemplate: (ReviewTemplate *) reviewTemplate emailFrom: (EmailUser *) emailFrom alternatives: (Alternatives *) alternatives kioskUrl: (NSString *) kioskUrl largeLogoPath: (NSString *) largeLogoPath socialSitesPostEnabled: (NSMutableArray *) socialSitesPostEnabled;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) id;
- (void) setId: (NSString *) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) code;
- (void) setCode: (NSString *) code;
#endif
- (BOOL) codeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) longName;
- (void) setLongName: (NSString *) longName;
#endif
- (BOOL) longNameIsSet;

#if !__has_feature(objc_arc)
- (TenantID) tenantID;
- (void) setTenantID: (TenantID) tenantID;
#endif
- (BOOL) tenantIDIsSet;

#if !__has_feature(objc_arc)
- (Address *) address;
- (void) setAddress: (Address *) address;
#endif
- (BOOL) addressIsSet;

#if !__has_feature(objc_arc)
- (NSString *) phone;
- (void) setPhone: (NSString *) phone;
#endif
- (BOOL) phoneIsSet;

#if !__has_feature(objc_arc)
- (NSString *) web;
- (void) setWeb: (NSString *) web;
#endif
- (BOOL) webIsSet;

#if !__has_feature(objc_arc)
- (NSString *) manager;
- (void) setManager: (NSString *) manager;
#endif
- (BOOL) managerIsSet;

#if !__has_feature(objc_arc)
- (NSString *) managerEmail;
- (void) setManagerEmail: (NSString *) managerEmail;
#endif
- (BOOL) managerEmailIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) emails;
- (void) setEmails: (NSMutableArray *) emails;
#endif
- (BOOL) emailsIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) attributes;
- (void) setAttributes: (NSMutableArray *) attributes;
#endif
- (BOOL) attributesIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) sourceUrls;
- (void) setSourceUrls: (NSMutableArray *) sourceUrls;
#endif
- (BOOL) sourceUrlsIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) nextExpressions;
- (void) setNextExpressions: (NSMutableDictionary *) nextExpressions;
#endif
- (BOOL) nextExpressionsIsSet;

#if !__has_feature(objc_arc)
- (LatLng *) latlng;
- (void) setLatlng: (LatLng *) latlng;
#endif
- (BOOL) latlngIsSet;

#if !__has_feature(objc_arc)
- (Kiosk *) kiosk;
- (void) setKiosk: (Kiosk *) kiosk;
#endif
- (BOOL) kioskIsSet;

#if !__has_feature(objc_arc)
- (NSString *) locationKey;
- (void) setLocationKey: (NSString *) locationKey;
#endif
- (BOOL) locationKeyIsSet;

#if !__has_feature(objc_arc)
- (NSString *) publishUrl;
- (void) setPublishUrl: (NSString *) publishUrl;
#endif
- (BOOL) publishUrlIsSet;

#if !__has_feature(objc_arc)
- (Publish *) publish;
- (void) setPublish: (Publish *) publish;
#endif
- (BOOL) publishIsSet;

#if !__has_feature(objc_arc)
- (ReviewTemplate *) reviewTemplate;
- (void) setReviewTemplate: (ReviewTemplate *) reviewTemplate;
#endif
- (BOOL) reviewTemplateIsSet;

#if !__has_feature(objc_arc)
- (EmailUser *) emailFrom;
- (void) setEmailFrom: (EmailUser *) emailFrom;
#endif
- (BOOL) emailFromIsSet;

#if !__has_feature(objc_arc)
- (Alternatives *) alternatives;
- (void) setAlternatives: (Alternatives *) alternatives;
#endif
- (BOOL) alternativesIsSet;

#if !__has_feature(objc_arc)
- (NSString *) kioskUrl;
- (void) setKioskUrl: (NSString *) kioskUrl;
#endif
- (BOOL) kioskUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) largeLogoPath;
- (void) setLargeLogoPath: (NSString *) largeLogoPath;
#endif
- (BOOL) largeLogoPathIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) socialSitesPostEnabled;
- (void) setSocialSitesPostEnabled: (NSMutableArray *) socialSitesPostEnabled;
#endif
- (BOOL) socialSitesPostEnabledIsSet;

@end

@interface RatingScale : NSObject <TBase, NSCoding> {
  double __min;
  double __max;
  double __overallMin;
  double __overallMax;
  NSMutableDictionary * __bucketUpperBounds;

  BOOL __min_isset;
  BOOL __max_isset;
  BOOL __overallMin_isset;
  BOOL __overallMax_isset;
  BOOL __bucketUpperBounds_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=min, setter=setMin:) double min;
@property (nonatomic, getter=max, setter=setMax:) double max;
@property (nonatomic, getter=overallMin, setter=setOverallMin:) double overallMin;
@property (nonatomic, getter=overallMax, setter=setOverallMax:) double overallMax;
@property (nonatomic, retain, getter=bucketUpperBounds, setter=setBucketUpperBounds:) NSMutableDictionary * bucketUpperBounds;
#endif

- (id) init;
- (id) initWithMin: (double) min max: (double) max overallMin: (double) overallMin overallMax: (double) overallMax bucketUpperBounds: (NSMutableDictionary *) bucketUpperBounds;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (double) min;
- (void) setMin: (double) min;
#endif
- (BOOL) minIsSet;

#if !__has_feature(objc_arc)
- (double) max;
- (void) setMax: (double) max;
#endif
- (BOOL) maxIsSet;

#if !__has_feature(objc_arc)
- (double) overallMin;
- (void) setOverallMin: (double) overallMin;
#endif
- (BOOL) overallMinIsSet;

#if !__has_feature(objc_arc)
- (double) overallMax;
- (void) setOverallMax: (double) overallMax;
#endif
- (BOOL) overallMaxIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) bucketUpperBounds;
- (void) setBucketUpperBounds: (NSMutableDictionary *) bucketUpperBounds;
#endif
- (BOOL) bucketUpperBoundsIsSet;

@end

@interface CollectorDefaults : NSObject <TBase, NSCoding> {
  int32_t __highMaxRefreshDelay;
  int32_t __highMinRefreshDelay;
  int32_t __highFailRefreshDelay;
  int32_t __lowMaxRefreshDelay;
  int32_t __lowMinRefreshDelay;
  int32_t __lowFailRefreshDelay;
  int32_t __maxNumFailures;

  BOOL __highMaxRefreshDelay_isset;
  BOOL __highMinRefreshDelay_isset;
  BOOL __highFailRefreshDelay_isset;
  BOOL __lowMaxRefreshDelay_isset;
  BOOL __lowMinRefreshDelay_isset;
  BOOL __lowFailRefreshDelay_isset;
  BOOL __maxNumFailures_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=highMaxRefreshDelay, setter=setHighMaxRefreshDelay:) int32_t highMaxRefreshDelay;
@property (nonatomic, getter=highMinRefreshDelay, setter=setHighMinRefreshDelay:) int32_t highMinRefreshDelay;
@property (nonatomic, getter=highFailRefreshDelay, setter=setHighFailRefreshDelay:) int32_t highFailRefreshDelay;
@property (nonatomic, getter=lowMaxRefreshDelay, setter=setLowMaxRefreshDelay:) int32_t lowMaxRefreshDelay;
@property (nonatomic, getter=lowMinRefreshDelay, setter=setLowMinRefreshDelay:) int32_t lowMinRefreshDelay;
@property (nonatomic, getter=lowFailRefreshDelay, setter=setLowFailRefreshDelay:) int32_t lowFailRefreshDelay;
@property (nonatomic, getter=maxNumFailures, setter=setMaxNumFailures:) int32_t maxNumFailures;
#endif

- (id) init;
- (id) initWithHighMaxRefreshDelay: (int32_t) highMaxRefreshDelay highMinRefreshDelay: (int32_t) highMinRefreshDelay highFailRefreshDelay: (int32_t) highFailRefreshDelay lowMaxRefreshDelay: (int32_t) lowMaxRefreshDelay lowMinRefreshDelay: (int32_t) lowMinRefreshDelay lowFailRefreshDelay: (int32_t) lowFailRefreshDelay maxNumFailures: (int32_t) maxNumFailures;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) highMaxRefreshDelay;
- (void) setHighMaxRefreshDelay: (int32_t) highMaxRefreshDelay;
#endif
- (BOOL) highMaxRefreshDelayIsSet;

#if !__has_feature(objc_arc)
- (int32_t) highMinRefreshDelay;
- (void) setHighMinRefreshDelay: (int32_t) highMinRefreshDelay;
#endif
- (BOOL) highMinRefreshDelayIsSet;

#if !__has_feature(objc_arc)
- (int32_t) highFailRefreshDelay;
- (void) setHighFailRefreshDelay: (int32_t) highFailRefreshDelay;
#endif
- (BOOL) highFailRefreshDelayIsSet;

#if !__has_feature(objc_arc)
- (int32_t) lowMaxRefreshDelay;
- (void) setLowMaxRefreshDelay: (int32_t) lowMaxRefreshDelay;
#endif
- (BOOL) lowMaxRefreshDelayIsSet;

#if !__has_feature(objc_arc)
- (int32_t) lowMinRefreshDelay;
- (void) setLowMinRefreshDelay: (int32_t) lowMinRefreshDelay;
#endif
- (BOOL) lowMinRefreshDelayIsSet;

#if !__has_feature(objc_arc)
- (int32_t) lowFailRefreshDelay;
- (void) setLowFailRefreshDelay: (int32_t) lowFailRefreshDelay;
#endif
- (BOOL) lowFailRefreshDelayIsSet;

#if !__has_feature(objc_arc)
- (int32_t) maxNumFailures;
- (void) setMaxNumFailures: (int32_t) maxNumFailures;
#endif
- (BOOL) maxNumFailuresIsSet;

@end

@interface Colors : NSObject <TBase, NSCoding> {
  NSString * __bgColor;
  NSString * __bgColorStart;
  NSString * __bgColorEnd;
  NSString * __borderColor;

  BOOL __bgColor_isset;
  BOOL __bgColorStart_isset;
  BOOL __bgColorEnd_isset;
  BOOL __borderColor_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=bgColor, setter=setBgColor:) NSString * bgColor;
@property (nonatomic, retain, getter=bgColorStart, setter=setBgColorStart:) NSString * bgColorStart;
@property (nonatomic, retain, getter=bgColorEnd, setter=setBgColorEnd:) NSString * bgColorEnd;
@property (nonatomic, retain, getter=borderColor, setter=setBorderColor:) NSString * borderColor;
#endif

- (id) init;
- (id) initWithBgColor: (NSString *) bgColor bgColorStart: (NSString *) bgColorStart bgColorEnd: (NSString *) bgColorEnd borderColor: (NSString *) borderColor;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) bgColor;
- (void) setBgColor: (NSString *) bgColor;
#endif
- (BOOL) bgColorIsSet;

#if !__has_feature(objc_arc)
- (NSString *) bgColorStart;
- (void) setBgColorStart: (NSString *) bgColorStart;
#endif
- (BOOL) bgColorStartIsSet;

#if !__has_feature(objc_arc)
- (NSString *) bgColorEnd;
- (void) setBgColorEnd: (NSString *) bgColorEnd;
#endif
- (BOOL) bgColorEndIsSet;

#if !__has_feature(objc_arc)
- (NSString *) borderColor;
- (void) setBorderColor: (NSString *) borderColor;
#endif
- (BOOL) borderColorIsSet;

@end

@interface Source : NSObject <TBase, NSCoding> {
  SourceCode __id;
  NSString * __name;
  NSMutableArray * __urls;
  NSString * __smallIconPath;
  NSString * __largeIconPath;
  RatingScale * __overallRS;
  NSMutableDictionary * __subRatingRS;
  BOOL __hasItemizedRatings;
  BOOL __allowsComments;
  int __status;
  SourceGroup __sourceGroup;
  CollectorDefaults * __collectorDefaults;
  NSString * __urlRegexp;
  BOOL __sendAlerts;
  BOOL __hasRating;
  BOOL __scoreable;
  BOOL __publishable;
  BOOL __schedulable;
  BOOL __autofindable;
  BOOL __viewable;
  BOOL __requestReviewable;
  NSMutableDictionary * __industryWeights;
  NSString * __domain;
  Colors * __colors;
  NSString * __listingUrl;
  NSMutableArray * __attributes;
  NSMutableArray * __idFields;
  NSString * __createUrl;
  NSString * __claimUrl;
  BOOL __isListing;
  BOOL __preserveDate;

  BOOL __id_isset;
  BOOL __name_isset;
  BOOL __urls_isset;
  BOOL __smallIconPath_isset;
  BOOL __largeIconPath_isset;
  BOOL __overallRS_isset;
  BOOL __subRatingRS_isset;
  BOOL __hasItemizedRatings_isset;
  BOOL __allowsComments_isset;
  BOOL __status_isset;
  BOOL __sourceGroup_isset;
  BOOL __collectorDefaults_isset;
  BOOL __urlRegexp_isset;
  BOOL __sendAlerts_isset;
  BOOL __hasRating_isset;
  BOOL __scoreable_isset;
  BOOL __publishable_isset;
  BOOL __schedulable_isset;
  BOOL __autofindable_isset;
  BOOL __viewable_isset;
  BOOL __requestReviewable_isset;
  BOOL __industryWeights_isset;
  BOOL __domain_isset;
  BOOL __colors_isset;
  BOOL __listingUrl_isset;
  BOOL __attributes_isset;
  BOOL __idFields_isset;
  BOOL __createUrl_isset;
  BOOL __claimUrl_isset;
  BOOL __isListing_isset;
  BOOL __preserveDate_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) SourceCode id;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=urls, setter=setUrls:) NSMutableArray * urls;
@property (nonatomic, retain, getter=smallIconPath, setter=setSmallIconPath:) NSString * smallIconPath;
@property (nonatomic, retain, getter=largeIconPath, setter=setLargeIconPath:) NSString * largeIconPath;
@property (nonatomic, retain, getter=overallRS, setter=setOverallRS:) RatingScale * overallRS;
@property (nonatomic, retain, getter=subRatingRS, setter=setSubRatingRS:) NSMutableDictionary * subRatingRS;
@property (nonatomic, getter=hasItemizedRatings, setter=setHasItemizedRatings:) BOOL hasItemizedRatings;
@property (nonatomic, getter=allowsComments, setter=setAllowsComments:) BOOL allowsComments;
@property (nonatomic, getter=status, setter=setStatus:) int status;
@property (nonatomic, retain, getter=sourceGroup, setter=setSourceGroup:) SourceGroup sourceGroup;
@property (nonatomic, retain, getter=collectorDefaults, setter=setCollectorDefaults:) CollectorDefaults * collectorDefaults;
@property (nonatomic, retain, getter=urlRegexp, setter=setUrlRegexp:) NSString * urlRegexp;
@property (nonatomic, getter=sendAlerts, setter=setSendAlerts:) BOOL sendAlerts;
@property (nonatomic, getter=hasRating, setter=setHasRating:) BOOL hasRating;
@property (nonatomic, getter=scoreable, setter=setScoreable:) BOOL scoreable;
@property (nonatomic, getter=publishable, setter=setPublishable:) BOOL publishable;
@property (nonatomic, getter=schedulable, setter=setSchedulable:) BOOL schedulable;
@property (nonatomic, getter=autofindable, setter=setAutofindable:) BOOL autofindable;
@property (nonatomic, getter=viewable, setter=setViewable:) BOOL viewable;
@property (nonatomic, getter=requestReviewable, setter=setRequestReviewable:) BOOL requestReviewable;
@property (nonatomic, retain, getter=industryWeights, setter=setIndustryWeights:) NSMutableDictionary * industryWeights;
@property (nonatomic, retain, getter=domain, setter=setDomain:) NSString * domain;
@property (nonatomic, retain, getter=colors, setter=setColors:) Colors * colors;
@property (nonatomic, retain, getter=listingUrl, setter=setListingUrl:) NSString * listingUrl;
@property (nonatomic, retain, getter=attributes, setter=setAttributes:) NSMutableArray * attributes;
@property (nonatomic, retain, getter=idFields, setter=setIdFields:) NSMutableArray * idFields;
@property (nonatomic, retain, getter=createUrl, setter=setCreateUrl:) NSString * createUrl;
@property (nonatomic, retain, getter=claimUrl, setter=setClaimUrl:) NSString * claimUrl;
@property (nonatomic, getter=isListing, setter=setIsListing:) BOOL isListing;
@property (nonatomic, getter=preserveDate, setter=setPreserveDate:) BOOL preserveDate;
#endif

- (id) init;
- (id) initWithId: (SourceCode) id name: (NSString *) name urls: (NSMutableArray *) urls smallIconPath: (NSString *) smallIconPath largeIconPath: (NSString *) largeIconPath overallRS: (RatingScale *) overallRS subRatingRS: (NSMutableDictionary *) subRatingRS hasItemizedRatings: (BOOL) hasItemizedRatings allowsComments: (BOOL) allowsComments status: (int) status sourceGroup: (SourceGroup) sourceGroup collectorDefaults: (CollectorDefaults *) collectorDefaults urlRegexp: (NSString *) urlRegexp sendAlerts: (BOOL) sendAlerts hasRating: (BOOL) hasRating scoreable: (BOOL) scoreable publishable: (BOOL) publishable schedulable: (BOOL) schedulable autofindable: (BOOL) autofindable viewable: (BOOL) viewable requestReviewable: (BOOL) requestReviewable industryWeights: (NSMutableDictionary *) industryWeights domain: (NSString *) domain colors: (Colors *) colors listingUrl: (NSString *) listingUrl attributes: (NSMutableArray *) attributes idFields: (NSMutableArray *) idFields createUrl: (NSString *) createUrl claimUrl: (NSString *) claimUrl isListing: (BOOL) isListing preserveDate: (BOOL) preserveDate;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (SourceCode) id;
- (void) setId: (SourceCode) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) urls;
- (void) setUrls: (NSMutableArray *) urls;
#endif
- (BOOL) urlsIsSet;

#if !__has_feature(objc_arc)
- (NSString *) smallIconPath;
- (void) setSmallIconPath: (NSString *) smallIconPath;
#endif
- (BOOL) smallIconPathIsSet;

#if !__has_feature(objc_arc)
- (NSString *) largeIconPath;
- (void) setLargeIconPath: (NSString *) largeIconPath;
#endif
- (BOOL) largeIconPathIsSet;

#if !__has_feature(objc_arc)
- (RatingScale *) overallRS;
- (void) setOverallRS: (RatingScale *) overallRS;
#endif
- (BOOL) overallRSIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) subRatingRS;
- (void) setSubRatingRS: (NSMutableDictionary *) subRatingRS;
#endif
- (BOOL) subRatingRSIsSet;

#if !__has_feature(objc_arc)
- (BOOL) hasItemizedRatings;
- (void) setHasItemizedRatings: (BOOL) hasItemizedRatings;
#endif
- (BOOL) hasItemizedRatingsIsSet;

#if !__has_feature(objc_arc)
- (BOOL) allowsComments;
- (void) setAllowsComments: (BOOL) allowsComments;
#endif
- (BOOL) allowsCommentsIsSet;

#if !__has_feature(objc_arc)
- (int) status;
- (void) setStatus: (int) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (SourceGroup) sourceGroup;
- (void) setSourceGroup: (SourceGroup) sourceGroup;
#endif
- (BOOL) sourceGroupIsSet;

#if !__has_feature(objc_arc)
- (CollectorDefaults *) collectorDefaults;
- (void) setCollectorDefaults: (CollectorDefaults *) collectorDefaults;
#endif
- (BOOL) collectorDefaultsIsSet;

#if !__has_feature(objc_arc)
- (NSString *) urlRegexp;
- (void) setUrlRegexp: (NSString *) urlRegexp;
#endif
- (BOOL) urlRegexpIsSet;

#if !__has_feature(objc_arc)
- (BOOL) sendAlerts;
- (void) setSendAlerts: (BOOL) sendAlerts;
#endif
- (BOOL) sendAlertsIsSet;

#if !__has_feature(objc_arc)
- (BOOL) hasRating;
- (void) setHasRating: (BOOL) hasRating;
#endif
- (BOOL) hasRatingIsSet;

#if !__has_feature(objc_arc)
- (BOOL) scoreable;
- (void) setScoreable: (BOOL) scoreable;
#endif
- (BOOL) scoreableIsSet;

#if !__has_feature(objc_arc)
- (BOOL) publishable;
- (void) setPublishable: (BOOL) publishable;
#endif
- (BOOL) publishableIsSet;

#if !__has_feature(objc_arc)
- (BOOL) schedulable;
- (void) setSchedulable: (BOOL) schedulable;
#endif
- (BOOL) schedulableIsSet;

#if !__has_feature(objc_arc)
- (BOOL) autofindable;
- (void) setAutofindable: (BOOL) autofindable;
#endif
- (BOOL) autofindableIsSet;

#if !__has_feature(objc_arc)
- (BOOL) viewable;
- (void) setViewable: (BOOL) viewable;
#endif
- (BOOL) viewableIsSet;

#if !__has_feature(objc_arc)
- (BOOL) requestReviewable;
- (void) setRequestReviewable: (BOOL) requestReviewable;
#endif
- (BOOL) requestReviewableIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) industryWeights;
- (void) setIndustryWeights: (NSMutableDictionary *) industryWeights;
#endif
- (BOOL) industryWeightsIsSet;

#if !__has_feature(objc_arc)
- (NSString *) domain;
- (void) setDomain: (NSString *) domain;
#endif
- (BOOL) domainIsSet;

#if !__has_feature(objc_arc)
- (Colors *) colors;
- (void) setColors: (Colors *) colors;
#endif
- (BOOL) colorsIsSet;

#if !__has_feature(objc_arc)
- (NSString *) listingUrl;
- (void) setListingUrl: (NSString *) listingUrl;
#endif
- (BOOL) listingUrlIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) attributes;
- (void) setAttributes: (NSMutableArray *) attributes;
#endif
- (BOOL) attributesIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) idFields;
- (void) setIdFields: (NSMutableArray *) idFields;
#endif
- (BOOL) idFieldsIsSet;

#if !__has_feature(objc_arc)
- (NSString *) createUrl;
- (void) setCreateUrl: (NSString *) createUrl;
#endif
- (BOOL) createUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) claimUrl;
- (void) setClaimUrl: (NSString *) claimUrl;
#endif
- (BOOL) claimUrlIsSet;

#if !__has_feature(objc_arc)
- (BOOL) isListing;
- (void) setIsListing: (BOOL) isListing;
#endif
- (BOOL) isListingIsSet;

#if !__has_feature(objc_arc)
- (BOOL) preserveDate;
- (void) setPreserveDate: (BOOL) preserveDate;
#endif
- (BOOL) preserveDateIsSet;

@end

@interface Filter : NSObject <TBase, NSCoding> {
  NSString * __name;
  NSMutableArray * __values;
  NSString * __operator;

  BOOL __name_isset;
  BOOL __values_isset;
  BOOL __operator_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=values, setter=setValues:) NSMutableArray * values;
@property (nonatomic, retain, getter=operator, setter=setOperator:) NSString * operator;
#endif

- (id) init;
- (id) initWithName: (NSString *) name values: (NSMutableArray *) values operator: (NSString *) operator;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) values;
- (void) setValues: (NSMutableArray *) values;
#endif
- (BOOL) valuesIsSet;

#if !__has_feature(objc_arc)
- (NSString *) operator;
- (void) setOperator: (NSString *) operator;
#endif
- (BOOL) operatorIsSet;

@end

@interface Sort : NSObject <TBase, NSCoding> {
  NSString * __name;
  int __sortOrder;

  BOOL __name_isset;
  BOOL __sortOrder_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, getter=sortOrder, setter=setSortOrder:) int sortOrder;
#endif

- (id) init;
- (id) initWithName: (NSString *) name sortOrder: (int) sortOrder;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (int) sortOrder;
- (void) setSortOrder: (int) sortOrder;
#endif
- (BOOL) sortOrderIsSet;

@end

@interface SearchFilter : NSObject <TBase, NSCoding> {
  NSString * __dateRangeFilterId;
  NSMutableArray * __sentimentFilters;
  NSMutableArray * __sourceSiteFilter;
  NSString * __startDate;
  NSString * __endDate;
  NSMutableArray * __socialSitesFilter;
  NSString * __postState;
  NSMutableArray * __locationFilter;

  BOOL __dateRangeFilterId_isset;
  BOOL __sentimentFilters_isset;
  BOOL __sourceSiteFilter_isset;
  BOOL __startDate_isset;
  BOOL __endDate_isset;
  BOOL __socialSitesFilter_isset;
  BOOL __postState_isset;
  BOOL __locationFilter_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=dateRangeFilterId, setter=setDateRangeFilterId:) NSString * dateRangeFilterId;
@property (nonatomic, retain, getter=sentimentFilters, setter=setSentimentFilters:) NSMutableArray * sentimentFilters;
@property (nonatomic, retain, getter=sourceSiteFilter, setter=setSourceSiteFilter:) NSMutableArray * sourceSiteFilter;
@property (nonatomic, retain, getter=startDate, setter=setStartDate:) NSString * startDate;
@property (nonatomic, retain, getter=endDate, setter=setEndDate:) NSString * endDate;
@property (nonatomic, retain, getter=socialSitesFilter, setter=setSocialSitesFilter:) NSMutableArray * socialSitesFilter;
@property (nonatomic, retain, getter=postState, setter=setPostState:) NSString * postState;
@property (nonatomic, retain, getter=locationFilter, setter=setLocationFilter:) NSMutableArray * locationFilter;
#endif

- (id) init;
- (id) initWithDateRangeFilterId: (NSString *) dateRangeFilterId sentimentFilters: (NSMutableArray *) sentimentFilters sourceSiteFilter: (NSMutableArray *) sourceSiteFilter startDate: (NSString *) startDate endDate: (NSString *) endDate socialSitesFilter: (NSMutableArray *) socialSitesFilter postState: (NSString *) postState locationFilter: (NSMutableArray *) locationFilter;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) dateRangeFilterId;
- (void) setDateRangeFilterId: (NSString *) dateRangeFilterId;
#endif
- (BOOL) dateRangeFilterIdIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) sentimentFilters;
- (void) setSentimentFilters: (NSMutableArray *) sentimentFilters;
#endif
- (BOOL) sentimentFiltersIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) sourceSiteFilter;
- (void) setSourceSiteFilter: (NSMutableArray *) sourceSiteFilter;
#endif
- (BOOL) sourceSiteFilterIsSet;

#if !__has_feature(objc_arc)
- (NSString *) startDate;
- (void) setStartDate: (NSString *) startDate;
#endif
- (BOOL) startDateIsSet;

#if !__has_feature(objc_arc)
- (NSString *) endDate;
- (void) setEndDate: (NSString *) endDate;
#endif
- (BOOL) endDateIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) socialSitesFilter;
- (void) setSocialSitesFilter: (NSMutableArray *) socialSitesFilter;
#endif
- (BOOL) socialSitesFilterIsSet;

#if !__has_feature(objc_arc)
- (NSString *) postState;
- (void) setPostState: (NSString *) postState;
#endif
- (BOOL) postStateIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) locationFilter;
- (void) setLocationFilter: (NSMutableArray *) locationFilter;
#endif
- (BOOL) locationFilterIsSet;

@end

@interface Reviewer : NSObject <TBase, NSCoding> {
  NSString * __id;
  NSString * __name;
  NSString * __location;
  NSString * __photoUrl;
  NSString * __profileUrl;
  int32_t __numReviews;
  int32_t __numComments;
  double __avgRating;
  NSString * __email;
  NSString * __phone;

  BOOL __id_isset;
  BOOL __name_isset;
  BOOL __location_isset;
  BOOL __photoUrl_isset;
  BOOL __profileUrl_isset;
  BOOL __numReviews_isset;
  BOOL __numComments_isset;
  BOOL __avgRating_isset;
  BOOL __email_isset;
  BOOL __phone_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=id, setter=setId:) NSString * id;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=location, setter=setLocation:) NSString * location;
@property (nonatomic, retain, getter=photoUrl, setter=setPhotoUrl:) NSString * photoUrl;
@property (nonatomic, retain, getter=profileUrl, setter=setProfileUrl:) NSString * profileUrl;
@property (nonatomic, getter=numReviews, setter=setNumReviews:) int32_t numReviews;
@property (nonatomic, getter=numComments, setter=setNumComments:) int32_t numComments;
@property (nonatomic, getter=avgRating, setter=setAvgRating:) double avgRating;
@property (nonatomic, retain, getter=email, setter=setEmail:) NSString * email;
@property (nonatomic, retain, getter=phone, setter=setPhone:) NSString * phone;
#endif

- (id) init;
- (id) initWithId: (NSString *) id name: (NSString *) name location: (NSString *) location photoUrl: (NSString *) photoUrl profileUrl: (NSString *) profileUrl numReviews: (int32_t) numReviews numComments: (int32_t) numComments avgRating: (double) avgRating email: (NSString *) email phone: (NSString *) phone;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) id;
- (void) setId: (NSString *) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) location;
- (void) setLocation: (NSString *) location;
#endif
- (BOOL) locationIsSet;

#if !__has_feature(objc_arc)
- (NSString *) photoUrl;
- (void) setPhotoUrl: (NSString *) photoUrl;
#endif
- (BOOL) photoUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) profileUrl;
- (void) setProfileUrl: (NSString *) profileUrl;
#endif
- (BOOL) profileUrlIsSet;

#if !__has_feature(objc_arc)
- (int32_t) numReviews;
- (void) setNumReviews: (int32_t) numReviews;
#endif
- (BOOL) numReviewsIsSet;

#if !__has_feature(objc_arc)
- (int32_t) numComments;
- (void) setNumComments: (int32_t) numComments;
#endif
- (BOOL) numCommentsIsSet;

#if !__has_feature(objc_arc)
- (double) avgRating;
- (void) setAvgRating: (double) avgRating;
#endif
- (BOOL) avgRatingIsSet;

#if !__has_feature(objc_arc)
- (NSString *) email;
- (void) setEmail: (NSString *) email;
#endif
- (BOOL) emailIsSet;

#if !__has_feature(objc_arc)
- (NSString *) phone;
- (void) setPhone: (NSString *) phone;
#endif
- (BOOL) phoneIsSet;

@end

@interface Keyword : NSObject <TBase, NSCoding> {
  NSString * __keyword;
  NSMutableArray * __categories;

  BOOL __keyword_isset;
  BOOL __categories_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=keyword, setter=setKeyword:) NSString * keyword;
@property (nonatomic, retain, getter=categories, setter=setCategories:) NSMutableArray * categories;
#endif

- (id) init;
- (id) initWithKeyword: (NSString *) keyword categories: (NSMutableArray *) categories;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) keyword;
- (void) setKeyword: (NSString *) keyword;
#endif
- (BOOL) keywordIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) categories;
- (void) setCategories: (NSMutableArray *) categories;
#endif
- (BOOL) categoriesIsSet;

@end

@interface SubRating : NSObject <TBase, NSCoding> {
  int __t;
  NSString * __n;
  double __v;
  double __normalizedV;
  NSString * __textV;

  BOOL __t_isset;
  BOOL __n_isset;
  BOOL __v_isset;
  BOOL __normalizedV_isset;
  BOOL __textV_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=t, setter=setT:) int t;
@property (nonatomic, retain, getter=n, setter=setN:) NSString * n;
@property (nonatomic, getter=v, setter=setV:) double v;
@property (nonatomic, getter=normalizedV, setter=setNormalizedV:) double normalizedV;
@property (nonatomic, retain, getter=textV, setter=setTextV:) NSString * textV;
#endif

- (id) init;
- (id) initWithT: (int) t n: (NSString *) n v: (double) v normalizedV: (double) normalizedV textV: (NSString *) textV;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) t;
- (void) setT: (int) t;
#endif
- (BOOL) tIsSet;

#if !__has_feature(objc_arc)
- (NSString *) n;
- (void) setN: (NSString *) n;
#endif
- (BOOL) nIsSet;

#if !__has_feature(objc_arc)
- (double) v;
- (void) setV: (double) v;
#endif
- (BOOL) vIsSet;

#if !__has_feature(objc_arc)
- (double) normalizedV;
- (void) setNormalizedV: (double) normalizedV;
#endif
- (BOOL) normalizedVIsSet;

#if !__has_feature(objc_arc)
- (NSString *) textV;
- (void) setTextV: (NSString *) textV;
#endif
- (BOOL) textVIsSet;

@end

@interface Tag : NSObject <TBase, NSCoding> {
  int __t;
  NSString * __n;
  double __v;

  BOOL __t_isset;
  BOOL __n_isset;
  BOOL __v_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=t, setter=setT:) int t;
@property (nonatomic, retain, getter=n, setter=setN:) NSString * n;
@property (nonatomic, getter=v, setter=setV:) double v;
#endif

- (id) init;
- (id) initWithT: (int) t n: (NSString *) n v: (double) v;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) t;
- (void) setT: (int) t;
#endif
- (BOOL) tIsSet;

#if !__has_feature(objc_arc)
- (NSString *) n;
- (void) setN: (NSString *) n;
#endif
- (BOOL) nIsSet;

#if !__has_feature(objc_arc)
- (double) v;
- (void) setV: (double) v;
#endif
- (BOOL) vIsSet;

@end

@interface Property : NSObject <TBase, NSCoding> {
  NSString * __name;
  NSMutableArray * __values;

  BOOL __name_isset;
  BOOL __values_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=values, setter=setValues:) NSMutableArray * values;
#endif

- (id) init;
- (id) initWithName: (NSString *) name values: (NSMutableArray *) values;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) values;
- (void) setValues: (NSMutableArray *) values;
#endif
- (BOOL) valuesIsSet;

@end

@interface UserPreference : NSObject <TBase, NSCoding> {
  NSString * __preferenceId;
  int __category;
  BOOL __enabled;
  NSMutableArray * __selectedValues;

  BOOL __preferenceId_isset;
  BOOL __category_isset;
  BOOL __enabled_isset;
  BOOL __selectedValues_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=preferenceId, setter=setPreferenceId:) NSString * preferenceId;
@property (nonatomic, getter=category, setter=setCategory:) int category;
@property (nonatomic, getter=enabled, setter=setEnabled:) BOOL enabled;
@property (nonatomic, retain, getter=selectedValues, setter=setSelectedValues:) NSMutableArray * selectedValues;
#endif

- (id) init;
- (id) initWithPreferenceId: (NSString *) preferenceId category: (int) category enabled: (BOOL) enabled selectedValues: (NSMutableArray *) selectedValues;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) preferenceId;
- (void) setPreferenceId: (NSString *) preferenceId;
#endif
- (BOOL) preferenceIdIsSet;

#if !__has_feature(objc_arc)
- (int) category;
- (void) setCategory: (int) category;
#endif
- (BOOL) categoryIsSet;

#if !__has_feature(objc_arc)
- (BOOL) enabled;
- (void) setEnabled: (BOOL) enabled;
#endif
- (BOOL) enabledIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) selectedValues;
- (void) setSelectedValues: (NSMutableArray *) selectedValues;
#endif
- (BOOL) selectedValuesIsSet;

@end

@interface FacetOption : NSObject <TBase, NSCoding> {
  NSString * __label;
  NSString * __value;
  NSMutableDictionary * __addlProps;

  BOOL __label_isset;
  BOOL __value_isset;
  BOOL __addlProps_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=label, setter=setLabel:) NSString * label;
@property (nonatomic, retain, getter=value, setter=setValue:) NSString * value;
@property (nonatomic, retain, getter=addlProps, setter=setAddlProps:) NSMutableDictionary * addlProps;
#endif

- (id) init;
- (id) initWithLabel: (NSString *) label value: (NSString *) value addlProps: (NSMutableDictionary *) addlProps;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) label;
- (void) setLabel: (NSString *) label;
#endif
- (BOOL) labelIsSet;

#if !__has_feature(objc_arc)
- (NSString *) value;
- (void) setValue: (NSString *) value;
#endif
- (BOOL) valueIsSet;

#if !__has_feature(objc_arc)
- (NSMutableDictionary *) addlProps;
- (void) setAddlProps: (NSMutableDictionary *) addlProps;
#endif
- (BOOL) addlPropsIsSet;

@end

@interface Facet : NSObject <TBase, NSCoding> {
  NSString * __name;
  NSString * __label;
  BOOL __isMultiselect;
  BOOL __isCustom;
  NSMutableArray * __facetOptions;

  BOOL __name_isset;
  BOOL __label_isset;
  BOOL __isMultiselect_isset;
  BOOL __isCustom_isset;
  BOOL __facetOptions_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=label, setter=setLabel:) NSString * label;
@property (nonatomic, getter=isMultiselect, setter=setIsMultiselect:) BOOL isMultiselect;
@property (nonatomic, getter=isCustom, setter=setIsCustom:) BOOL isCustom;
@property (nonatomic, retain, getter=facetOptions, setter=setFacetOptions:) NSMutableArray * facetOptions;
#endif

- (id) init;
- (id) initWithName: (NSString *) name label: (NSString *) label isMultiselect: (BOOL) isMultiselect isCustom: (BOOL) isCustom facetOptions: (NSMutableArray *) facetOptions;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) label;
- (void) setLabel: (NSString *) label;
#endif
- (BOOL) labelIsSet;

#if !__has_feature(objc_arc)
- (BOOL) isMultiselect;
- (void) setIsMultiselect: (BOOL) isMultiselect;
#endif
- (BOOL) isMultiselectIsSet;

#if !__has_feature(objc_arc)
- (BOOL) isCustom;
- (void) setIsCustom: (BOOL) isCustom;
#endif
- (BOOL) isCustomIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) facetOptions;
- (void) setFacetOptions: (NSMutableArray *) facetOptions;
#endif
- (BOOL) facetOptionsIsSet;

@end

@interface UserConfig : NSObject <TBase, NSCoding> {
  NSMutableArray * __featuresEnabled;
  Facet * __reviewSources;
  Facet * __kioskSources;
  Facet * __surveySources;
  Facet * __socialSources;
  NSMutableArray * __authLocations;
  Facet * __dateRanges;
  Facet * __socialStates;
  Facet * __sentimentValues;
  NSMutableArray * __userSettings;
  BOOL __isDefaultSettings;
  NSString * __tenantLogoUrl;
  Facet * __industrySources;
  NSMutableArray * __pushNotificationsPref;
  Facet * __menus;
  NSString * __tenantProgramID;

  BOOL __featuresEnabled_isset;
  BOOL __reviewSources_isset;
  BOOL __kioskSources_isset;
  BOOL __surveySources_isset;
  BOOL __socialSources_isset;
  BOOL __authLocations_isset;
  BOOL __dateRanges_isset;
  BOOL __socialStates_isset;
  BOOL __sentimentValues_isset;
  BOOL __userSettings_isset;
  BOOL __isDefaultSettings_isset;
  BOOL __tenantLogoUrl_isset;
  BOOL __industrySources_isset;
  BOOL __pushNotificationsPref_isset;
  BOOL __menus_isset;
  BOOL __tenantProgramID_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=featuresEnabled, setter=setFeaturesEnabled:) NSMutableArray * featuresEnabled;
@property (nonatomic, retain, getter=reviewSources, setter=setReviewSources:) Facet * reviewSources;
@property (nonatomic, retain, getter=kioskSources, setter=setKioskSources:) Facet * kioskSources;
@property (nonatomic, retain, getter=surveySources, setter=setSurveySources:) Facet * surveySources;
@property (nonatomic, retain, getter=socialSources, setter=setSocialSources:) Facet * socialSources;
@property (nonatomic, retain, getter=authLocations, setter=setAuthLocations:) NSMutableArray * authLocations;
@property (nonatomic, retain, getter=dateRanges, setter=setDateRanges:) Facet * dateRanges;
@property (nonatomic, retain, getter=socialStates, setter=setSocialStates:) Facet * socialStates;
@property (nonatomic, retain, getter=sentimentValues, setter=setSentimentValues:) Facet * sentimentValues;
@property (nonatomic, retain, getter=userSettings, setter=setUserSettings:) NSMutableArray * userSettings;
@property (nonatomic, getter=isDefaultSettings, setter=setIsDefaultSettings:) BOOL isDefaultSettings;
@property (nonatomic, retain, getter=tenantLogoUrl, setter=setTenantLogoUrl:) NSString * tenantLogoUrl;
@property (nonatomic, retain, getter=industrySources, setter=setIndustrySources:) Facet * industrySources;
@property (nonatomic, retain, getter=pushNotificationsPref, setter=setPushNotificationsPref:) NSMutableArray * pushNotificationsPref;
@property (nonatomic, retain, getter=menus, setter=setMenus:) Facet * menus;
@property (nonatomic, retain, getter=tenantProgramID, setter=setTenantProgramID:) NSString * tenantProgramID;
#endif

- (id) init;
- (id) initWithFeaturesEnabled: (NSMutableArray *) featuresEnabled reviewSources: (Facet *) reviewSources kioskSources: (Facet *) kioskSources surveySources: (Facet *) surveySources socialSources: (Facet *) socialSources authLocations: (NSMutableArray *) authLocations dateRanges: (Facet *) dateRanges socialStates: (Facet *) socialStates sentimentValues: (Facet *) sentimentValues userSettings: (NSMutableArray *) userSettings isDefaultSettings: (BOOL) isDefaultSettings tenantLogoUrl: (NSString *) tenantLogoUrl industrySources: (Facet *) industrySources pushNotificationsPref: (NSMutableArray *) pushNotificationsPref menus: (Facet *) menus tenantProgramID: (NSString *) tenantProgramID;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSMutableArray *) featuresEnabled;
- (void) setFeaturesEnabled: (NSMutableArray *) featuresEnabled;
#endif
- (BOOL) featuresEnabledIsSet;

#if !__has_feature(objc_arc)
- (Facet *) reviewSources;
- (void) setReviewSources: (Facet *) reviewSources;
#endif
- (BOOL) reviewSourcesIsSet;

#if !__has_feature(objc_arc)
- (Facet *) kioskSources;
- (void) setKioskSources: (Facet *) kioskSources;
#endif
- (BOOL) kioskSourcesIsSet;

#if !__has_feature(objc_arc)
- (Facet *) surveySources;
- (void) setSurveySources: (Facet *) surveySources;
#endif
- (BOOL) surveySourcesIsSet;

#if !__has_feature(objc_arc)
- (Facet *) socialSources;
- (void) setSocialSources: (Facet *) socialSources;
#endif
- (BOOL) socialSourcesIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) authLocations;
- (void) setAuthLocations: (NSMutableArray *) authLocations;
#endif
- (BOOL) authLocationsIsSet;

#if !__has_feature(objc_arc)
- (Facet *) dateRanges;
- (void) setDateRanges: (Facet *) dateRanges;
#endif
- (BOOL) dateRangesIsSet;

#if !__has_feature(objc_arc)
- (Facet *) socialStates;
- (void) setSocialStates: (Facet *) socialStates;
#endif
- (BOOL) socialStatesIsSet;

#if !__has_feature(objc_arc)
- (Facet *) sentimentValues;
- (void) setSentimentValues: (Facet *) sentimentValues;
#endif
- (BOOL) sentimentValuesIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) userSettings;
- (void) setUserSettings: (NSMutableArray *) userSettings;
#endif
- (BOOL) userSettingsIsSet;

#if !__has_feature(objc_arc)
- (BOOL) isDefaultSettings;
- (void) setIsDefaultSettings: (BOOL) isDefaultSettings;
#endif
- (BOOL) isDefaultSettingsIsSet;

#if !__has_feature(objc_arc)
- (NSString *) tenantLogoUrl;
- (void) setTenantLogoUrl: (NSString *) tenantLogoUrl;
#endif
- (BOOL) tenantLogoUrlIsSet;

#if !__has_feature(objc_arc)
- (Facet *) industrySources;
- (void) setIndustrySources: (Facet *) industrySources;
#endif
- (BOOL) industrySourcesIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) pushNotificationsPref;
- (void) setPushNotificationsPref: (NSMutableArray *) pushNotificationsPref;
#endif
- (BOOL) pushNotificationsPrefIsSet;

#if !__has_feature(objc_arc)
- (Facet *) menus;
- (void) setMenus: (Facet *) menus;
#endif
- (BOOL) menusIsSet;

#if !__has_feature(objc_arc)
- (NSString *) tenantProgramID;
- (void) setTenantProgramID: (NSString *) tenantProgramID;
#endif
- (BOOL) tenantProgramIDIsSet;

@end

@interface User : NSObject <TBase, NSCoding> {
  int32_t __id;
  int64_t __tenantID;
  NSString * __roleID;
  NSString * __firstName;
  NSString * __middleName;
  NSString * __lastName;
  NSString * __email;
  NSString * __password;
  BOOL __removed;
  NSMutableArray * __filters;
  NSString * __externalID;
  BOOL __active;
  BOOL __notified;
  NSString * __userKey;
  NSString * __tenantName;
  NSString * __keySwapDate;

  BOOL __id_isset;
  BOOL __tenantID_isset;
  BOOL __roleID_isset;
  BOOL __firstName_isset;
  BOOL __middleName_isset;
  BOOL __lastName_isset;
  BOOL __email_isset;
  BOOL __password_isset;
  BOOL __removed_isset;
  BOOL __filters_isset;
  BOOL __externalID_isset;
  BOOL __active_isset;
  BOOL __notified_isset;
  BOOL __userKey_isset;
  BOOL __tenantName_isset;
  BOOL __keySwapDate_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=id, setter=setId:) int32_t id;
@property (nonatomic, getter=tenantID, setter=setTenantID:) int64_t tenantID;
@property (nonatomic, retain, getter=roleID, setter=setRoleID:) NSString * roleID;
@property (nonatomic, retain, getter=firstName, setter=setFirstName:) NSString * firstName;
@property (nonatomic, retain, getter=middleName, setter=setMiddleName:) NSString * middleName;
@property (nonatomic, retain, getter=lastName, setter=setLastName:) NSString * lastName;
@property (nonatomic, retain, getter=email, setter=setEmail:) NSString * email;
@property (nonatomic, retain, getter=password, setter=setPassword:) NSString * password;
@property (nonatomic, getter=removed, setter=setRemoved:) BOOL removed;
@property (nonatomic, retain, getter=filters, setter=setFilters:) NSMutableArray * filters;
@property (nonatomic, retain, getter=externalID, setter=setExternalID:) NSString * externalID;
@property (nonatomic, getter=active, setter=setActive:) BOOL active;
@property (nonatomic, getter=notified, setter=setNotified:) BOOL notified;
@property (nonatomic, retain, getter=userKey, setter=setUserKey:) NSString * userKey;
@property (nonatomic, retain, getter=tenantName, setter=setTenantName:) NSString * tenantName;
@property (nonatomic, retain, getter=keySwapDate, setter=setKeySwapDate:) NSString * keySwapDate;
#endif

- (id) init;
- (id) initWithId: (int32_t) id tenantID: (int64_t) tenantID roleID: (NSString *) roleID firstName: (NSString *) firstName middleName: (NSString *) middleName lastName: (NSString *) lastName email: (NSString *) email password: (NSString *) password removed: (BOOL) removed filters: (NSMutableArray *) filters externalID: (NSString *) externalID active: (BOOL) active notified: (BOOL) notified userKey: (NSString *) userKey tenantName: (NSString *) tenantName keySwapDate: (NSString *) keySwapDate;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) id;
- (void) setId: (int32_t) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (int64_t) tenantID;
- (void) setTenantID: (int64_t) tenantID;
#endif
- (BOOL) tenantIDIsSet;

#if !__has_feature(objc_arc)
- (NSString *) roleID;
- (void) setRoleID: (NSString *) roleID;
#endif
- (BOOL) roleIDIsSet;

#if !__has_feature(objc_arc)
- (NSString *) firstName;
- (void) setFirstName: (NSString *) firstName;
#endif
- (BOOL) firstNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) middleName;
- (void) setMiddleName: (NSString *) middleName;
#endif
- (BOOL) middleNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) lastName;
- (void) setLastName: (NSString *) lastName;
#endif
- (BOOL) lastNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) email;
- (void) setEmail: (NSString *) email;
#endif
- (BOOL) emailIsSet;

#if !__has_feature(objc_arc)
- (NSString *) password;
- (void) setPassword: (NSString *) password;
#endif
- (BOOL) passwordIsSet;

#if !__has_feature(objc_arc)
- (BOOL) removed;
- (void) setRemoved: (BOOL) removed;
#endif
- (BOOL) removedIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) filters;
- (void) setFilters: (NSMutableArray *) filters;
#endif
- (BOOL) filtersIsSet;

#if !__has_feature(objc_arc)
- (NSString *) externalID;
- (void) setExternalID: (NSString *) externalID;
#endif
- (BOOL) externalIDIsSet;

#if !__has_feature(objc_arc)
- (BOOL) active;
- (void) setActive: (BOOL) active;
#endif
- (BOOL) activeIsSet;

#if !__has_feature(objc_arc)
- (BOOL) notified;
- (void) setNotified: (BOOL) notified;
#endif
- (BOOL) notifiedIsSet;

#if !__has_feature(objc_arc)
- (NSString *) userKey;
- (void) setUserKey: (NSString *) userKey;
#endif
- (BOOL) userKeyIsSet;

#if !__has_feature(objc_arc)
- (NSString *) tenantName;
- (void) setTenantName: (NSString *) tenantName;
#endif
- (BOOL) tenantNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) keySwapDate;
- (void) setKeySwapDate: (NSString *) keySwapDate;
#endif
- (BOOL) keySwapDateIsSet;

@end

@interface MobileCommonConstants : NSObject {
}
+ (NSString *) ACTION_FLAG;
+ (NSString *) ACTION_REPLY_DELETE;
+ (NSString *) ACTION_MARK_READ;
+ (NSString *) ACTION_DELETE;
+ (NSString *) ACTION_REPLY;
+ (NSString *) ACTION_FORWARD;
+ (NSString *) ACTION_PUBLISH;
+ (NSString *) ACTION_UNPUBLISH;
+ (NSString *) ACTION_REQUEST_REVIEW;
+ (NSString *) ACTION_RESURVEY;
+ (NSString *) ACTION_POST_APPROVE;
+ (NSString *) ACTION_POST_REJECT;
+ (NSString *) SCORE_ENABLED;
+ (NSString *) SCORE_POST_ENABLED;
+ (NSString *) SOCIAL_ENABLED;
+ (NSString *) DASHBOARD_ENABLED;
+ (NSString *) RATINGS_ENABLED;
+ (NSString *) RATINGS_SENTIMENT_ENABLED;
+ (NSString *) RATINGS_KIOSK_ENABLED;
+ (NSString *) RATINGS_LOCATIONS_ENABLED;
+ (NSString *) TODO_TAB_ENABLED;
+ (NSString *) BUSINESS_LISTING_ENABLED;
+ (NSString *) PREFERENCE_PUSHNOTIF_SENTIMENT_THIRDPARTY;
+ (NSString *) PREFERENCE_PUSHNOTIF_SENTIMENT_KIOSK;
+ (NSString *) PREFERENCE_PUSHNOTIF_SENTIMENT_SURVEY;
+ (NSString *) PREFERENCE_GENERAL_LOCATION;
+ (NSString *) POSITIVE_REVIEWS_FEED;
+ (NSString *) NEGATIVE_REVIEWS_FEED;
+ (NSString *) NEUTRAL_REVIEWS_FEED;
+ (NSString *) NO_RATINGS_FEED;
+ (NSString *) POSITIVE_REVIEWS_ALERT;
+ (NSString *) NEGATIVE_REVIEWS_ALERT;
+ (NSString *) NEUTRAL_REVIEWS_ALERT;
+ (NSString *) NO_RATINGS_ALERT;
+ (NSString *) REVIEW_SITES_ALL;
+ (NSString *) FACEBOOK_FEED;
+ (NSString *) TWITTER_FEED;
+ (NSString *) GOOGLEPLUS_FEED;
+ (NSString *) KIOSK_REVIEWS_FEED;
+ (NSString *) FACEBOOK_ALERT;
+ (NSString *) TWITTER_ALERT;
+ (NSString *) GOOGLEPLUS_ALERT;
+ (NSString *) KIOSK_REVIEWS_ALERT;
+ (NSString *) LOCATIONS_ALL;
+ (NSString *) FILTER_SENTIMENT_NEGATIVE;
+ (NSString *) FILTER_SENTIMENT_NEUTRAL;
+ (NSString *) FILTER_SENTIMENT_POSITIVE;
+ (NSString *) FILTER_POST_STATE_UNREAD;
+ (NSString *) FILTER_POST_STATE_FLAGGED;
+ (NSString *) FILTER_POST_STATE_ALL;
+ (NSString *) FILTER_POST_STATE_FAILED;
+ (NSString *) FILTER_POST_STATE_REJECTED;
+ (NSString *) FILTER_POST_STATE_CANCELLED;
+ (NSString *) FILTER_POST_STATE_PENDING_APPROVAL;
+ (NSString *) FILTER_POST_STATE_APPROVED;
+ (NSString *) FILTER_POST_STATE_POST_SUCCEEDED;
+ (NSString *) SOURCE_ID_FACEBOOK;
+ (NSString *) SOURCE_ID_GOOGLE;
+ (NSString *) SOURCE_ID_TWITTER;
+ (NSString *) SOURCE_ID_YOUTUBE;
+ (NSString *) SOURCE_ID_INSTAGRAM;
+ (NSString *) SOURCE_ID_SURVEY;
+ (NSString *) SOURCE_NAME_SURVEY;
+ (NSString *) SOURCE_ID_KIOSK;
+ (NSString *) SOURCE_NAME_KIOSK;
+ (NSString *) SOURCE_NAME_THIRD_PARTY;
+ (NSString *) SOURCE_GOOGLE_PLACES;
+ (NSString *) SOURCE_CARS;
+ (NSString *) KIOSK_GOOGLE_REVIEW_SOURCE;
+ (NSString *) PREFERENCE_DASHBOARD_SOURCE_CUSTOMIZED;
+ (NSString *) PREFERENCE_DASHBOARD_SOURCE_DEFAULT;
+ (NSString *) PREFERENCE_REVIEW_FILTER_SOURCE;
+ (NSString *) PREFERENCE_REVIEW_FILTER_DTRANGE;
+ (NSString *) PREFERENCE_REVIEW_FILTER_SENTIMENT;
+ (NSString *) PREFERENCE_SOCIAL_FILTER_SOURCE;
+ (NSString *) PREFERENCE_SOCIAL_FILTER_DTRANGE;
+ (NSString *) PREFERENCE_SOCIAL_FILTER_POSTSTATES;
+ (NSString *) EVENT_APP_LAUNCH;
+ (NSString *) EVENT_PAGE_HIT;
+ (NSString *) EVENT_LOGIN;
+ (NSString *) EVENT_LOGIN_FAIL;
+ (NSString *) EVENT_LOGOUT;
+ (NSString *) EVENT_WALKTHROUGH_SKIP;
+ (NSString *) EVENT_DASH_SCORE_TAP;
+ (NSString *) EVENT_DASH_CHART_SWIPE;
+ (NSString *) EVENT_DASH_TILE_SELECT;
+ (NSString *) EVENT_SETTINGS_DASH_TILE_CUSTOMIZE;
+ (NSString *) EVENT_REVIEW_FILTER_CUSTOMIZE;
+ (NSString *) EVENT_REVIEW_DETAIL_ACTION;
+ (NSString *) EVENT_REVIEW_ACTION_SUBMIT;
+ (NSString *) EVENT_SOCIAL_FILTER_CUSTOMIZE;
+ (NSString *) EVENT_SOCIAL_DETAIL_ACTION;
+ (NSString *) EVENT_SOCIAL_ACTION_SUBMIT;
+ (NSString *) EVENT_SOCIAL_POST_SUBMITTED;
+ (NSString *) EVENT_SOCIAL_POST_ANOTHER;
+ (NSString *) EVENT_TASKS_LOCATIONS_VIEW;
+ (NSString *) EVENT_TASK_ACTION;
+ (NSString *) EVENT_TASK_REJECT_CONFIRM;
+ (NSString *) EVENT_PUSH_NOTIF_SENT;
+ (NSString *) EVENT_PUSH_NOTIF_OPENED;
+ (NSString *) EVENT_API_FAILURE;
+ (NSString *) EVENT_CONNECTION_TIMING;
+ (NSString *) SUPER_PROP_USER;
+ (NSString *) SUPER_PROP_TENANT;
+ (NSString *) SUPER_PROP_PLATFORM;
+ (NSString *) SUPER_PROP_VERSION;
+ (NSString *) SUPER_PROP_APP_NAME;
+ (NSString *) PROP_ERROR_CODE;
+ (NSString *) PROP_EMAIL;
+ (NSString *) PROP_CHART_TITLE;
+ (NSString *) PROP_SOURCEID;
+ (NSString *) PROP_POSITION;
+ (NSString *) PROP_SENTIMENT;
+ (NSString *) PROP_SITES;
+ (NSString *) PROP_TIME;
+ (NSString *) PROP_REVIEWID;
+ (NSString *) PROP_POSTS;
+ (NSString *) PROP_ACTION;
+ (NSString *) PROP_MONITOR_POSTID;
+ (NSString *) PROP_SCHEDULED_POSTID;
+ (NSString *) PROP_LOCATIONS;
+ (NSString *) PROP_IMAGE;
+ (NSString *) PROP_IMAGE_SOURCE;
+ (NSString *) PROP_CHAR_COUNT;
+ (NSString *) PROP_SOURCE_PAGE;
+ (NSString *) PROP_TYPE;
+ (NSString *) PROP_PAGE;
+ (NSString *) PROP_API_NAME;
+ (NSString *) PROP_SERVER_ERROR_TEXT;
+ (NSString *) PROP_USER_ERROR_TEXT;
+ (NSString *) PROP_CONNECTION_TIME;
+ (NSString *) PROP_CORRELATION_ID;
+ (NSString *) PROP_CONNECTION_SUCCESS;
+ (NSString *) VALUE_APP_NAME_REP;
+ (NSString *) VALUE_APP_NAME_FORD;
+ (NSString *) VALUE_PAGE_DASHBOARD_TAB;
+ (NSString *) VALUE_PAGE_REVIEWS_TAB;
+ (NSString *) VALUE_PAGE_SOCIAL_TAB;
+ (NSString *) VALUE_PAGE_SCORE_TAB;
+ (NSString *) VALUE_PAGE_TASKS_TAB;
+ (NSString *) VALUE_PAGE_REVIEW_DETAIL;
+ (NSString *) VALUE_PAGE_SOCIAL_DETAIL;
+ (NSString *) VALUE_PAGE_TASK_DETAIL;
+ (NSString *) VALUE_PAGE_HELP;
+ (NSString *) VALUE_PAGE_DASHBOARD_SETTINGS;
+ (NSString *) VALUE_PAGE_SETTINGS;
+ (NSString *) VALUE_PAGE_LOGIN;
+ (NSString *) VALUE_PAGE_REVIEW_OVERVIEW;
+ (NSString *) VALUE_PAGE_SOCIAL_OVERVIEW;
+ (NSString *) VALUE_PAGE_SOCIAL_POST;
+ (NSString *) VALUE_PAGE_SOCIAL_POST_SENT;
+ (NSString *) VALUE_PAGE_SOCIAL_POST_LOCATION;
+ (NSString *) VALUE_PAGE_SOCIAL_FILTER;
+ (NSString *) VALUE_PAGE_REVIEW_FILTER;
+ (NSString *) VALUE_PAGE_SOCIAL_REPLY;
+ (NSString *) VALUE_PAGE_REVIEW_REPLY;
+ (NSString *) VALUE_PAGE_REVIEW_FORWARD;
+ (NSString *) VALUE_PAGE_MEDIA_FULL_VIEW;
+ (NSString *) VALUE_PAGE_TASK_LOCATION;
+ (NSString *) VALUE_TRUE;
+ (NSString *) VALUE_FALSE;
+ (NSString *) VALUE_POSITIVE;
+ (NSString *) VALUE_NEGATIVE;
+ (NSString *) VALUE_NEUTRAL;
+ (NSString *) VALUE_REPLY;
+ (NSString *) VALUE_FORWARD;
+ (NSString *) VALUE_DELETE;
+ (NSString *) VALUE_PUBLISH;
+ (NSString *) VALUE_UNPUBLISH;
+ (NSString *) VALUE_CANCEL;
+ (NSString *) VALUE_CAMERA;
+ (NSString *) VALUE_GALLERY;
+ (NSString *) VALUE_REVIEW_TYPE;
+ (NSString *) VALUE_LOGOUT_USER_SOURCE;
+ (NSString *) VALUE_LOGOUT_403_SOURCE;
+ (NSString *) HTTP_HEADER_VERSION_CD;
+ (NSString *) HTTP_HEADER_VERSION_NM;
+ (NSString *) HTTP_HEADER_PLATFORM;
+ (NSString *) HTTP_HEADER_USER_ID;
+ (NSString *) HTTP_HEADER_TENANT_ID;
+ (NSString *) HTTP_HEADER_KEY_SWAP_DT;
+ (NSString *) HTTP_HEADER_CORRELATION_ID;
+ (NSString *) HTTP_HEADER_EMULATE_RESP;
+ (NSString *) HTTP_HEADER_HMAC;
+ (NSString *) HTTP_HEADER_DATE;
+ (NSString *) HTTP_HEADER_CONTENT_MD5;
@end
